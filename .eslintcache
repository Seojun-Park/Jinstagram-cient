[{"/Users/jinchulpark/react/jinstagram-client/src/Routes/Home/HomeContainer.tsx":"1","/Users/jinchulpark/react/jinstagram-client/src/Apollo/apollo.ts":"2","/Users/jinchulpark/react/jinstagram-client/src/Routes/AuthHome/AuthHomeContainer.tsx":"3","/Users/jinchulpark/react/jinstagram-client/src/Routes/Home/HomeQueries.ts":"4","/Users/jinchulpark/react/jinstagram-client/src/Hooks/Geocoding.ts":"5","/Users/jinchulpark/react/jinstagram-client/src/Routes/AuthHome/AuthHomePresenter.tsx":"6","/Users/jinchulpark/react/jinstagram-client/src/Firebase/index.ts":"7","/Users/jinchulpark/react/jinstagram-client/src/Components/FeedBox/index.ts":"8","/Users/jinchulpark/react/jinstagram-client/src/Components/Header/HeaderPresenter.tsx":"9","/Users/jinchulpark/react/jinstagram-client/src/Components/Header/HeaderStyles.ts":"10","/Users/jinchulpark/react/jinstagram-client/src/Components/FeedBox/FeedBoxStyles.ts":"11"},{"size":5142,"mtime":1609978437393,"results":"12","hashOfConfig":"13"},{"size":1978,"mtime":1609532563570,"results":"14","hashOfConfig":"13"},{"size":7036,"mtime":1609754981039,"results":"15","hashOfConfig":"13"},{"size":930,"mtime":1609955562013,"results":"16","hashOfConfig":"13"},{"size":577,"mtime":1609978607930,"results":"17","hashOfConfig":"13"},{"size":6819,"mtime":1609955562011,"results":"18","hashOfConfig":"13"},{"size":246,"mtime":1609955562010,"results":"19","hashOfConfig":"13"},{"size":84,"mtime":1609877259533,"results":"20","hashOfConfig":"13"},{"size":810,"mtime":1609876577970,"results":"21","hashOfConfig":"13"},{"size":768,"mtime":1609875385986,"results":"22","hashOfConfig":"13"},{"size":1995,"mtime":1609973264253,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"t19lgf",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jinchulpark/react/jinstagram-client/src/Routes/Home/HomeContainer.tsx",["47","48"],"import { useMutation, useQuery } from '@apollo/client'\nimport React, { useEffect, useState } from 'react'\nimport { toast } from 'react-toastify'\nimport { storage } from '../../Firebase'\nimport { getAddress } from '../../Hooks/Geocoding'\nimport { ME } from '../../sharedquaries'\nimport {\n    GetFollowedPost,\n    GetFollowedPostVariables,\n    Me,\n    SearchUser,\n    SearchUserVariables,\n    UploadPost,\n    UploadPostVariables\n} from '../../types/api'\nimport HomePresenter from './HomePresenter'\nimport useInput from '../../Hooks/useInput'\nimport {\n    GET_FOLLOW_POST,\n    SEARCH_USER,\n    UPLOAD_POST\n} from './HomeQueries'\n\n\nconst HomeContainer = () => {\n    const [me, setMe] = useState<any>();\n    const [flag, setFlag] = useState<boolean>(false);\n    const [images, setImages] = useState<any>()\n    const [caption, setCaption] = useInput(\"\")\n    const [imageUrl, setImageUrl] = useState<string[]>([]);\n    const [progress, setProgress] = useState(1);\n    const [page, setPage] = useState<number>(1);\n    const [term, termChange] = useInput(\"\")\n    const [posts, setPosts] = useState<any>();\n    const [searchedUser, setSearchedUser] = useState<any>()\n    const [lat, setLat] = useState<number>(0)\n    const [lng, setLng] = useState<number>(0)\n    const [location, setLocation] = useState<string>(\"\")\n\n    const { loading } = useQuery<Me>(ME, {\n        onCompleted: ({ Me }) => {\n            const { ok, err, user } = Me\n            if (ok && user) {\n                setMe(user);\n            } else if (err) {\n                toast.error(err);\n            }\n        }\n    })\n\n    useQuery<GetFollowedPost, GetFollowedPostVariables>(GET_FOLLOW_POST, {\n        variables: {\n            page\n        },\n        onCompleted: ({ GetFollowedPost }) => {\n            const { ok, err, post } = GetFollowedPost;\n            if (ok) {\n                if (post) {\n                    setPosts(post);\n                }\n            } else if (err) {\n                toast.error(err);\n            }\n        }\n    })\n\n\n    useQuery<SearchUser, SearchUserVariables>(SEARCH_USER, {\n        skip: term === \"\",\n        variables: {\n            term\n        },\n        onCompleted: ({ SearchUser }) => {\n            const { ok, err, users } = SearchUser;\n            if (ok) {\n                if (users) {\n                    setSearchedUser(users);\n                }\n            } else {\n                console.log(err)\n            }\n        }\n    })\n\n    const [UploadPostMutation] = useMutation<UploadPost, UploadPostVariables>(UPLOAD_POST, {\n        variables: {\n            caption,\n            location,\n            images: imageUrl\n        }\n    })\n\n    const handleUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n        event.preventDefault()\n        if (event.target && event.target.files) {\n            if (event.target !== null && event.target.files && event.target.files.length !== null) {\n                setImages(event.target.files)\n                setFlag(true);\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (flag && me && images) {\n            for (let i = 0; i < images.length; i++) {\n                let uploadTask = storage\n                    .ref(`/${me.username}/images/${images[i].name}`)\n                    .put(images[i]);\n                uploadTask.on(\n                    \"state_changed\",\n                    (snapshot) => {\n                        const percentUploaded = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n                        setProgress(percentUploaded)\n                    },\n                    (err) => { console.log(err) },\n                    () => {\n                        storage.ref(`/${me.username}/images/`)\n                            .child(`${images[i].name}`)\n                            .getDownloadURL()\n                            .then((url) => {\n                                console.log(url)\n                                setImageUrl(prev => [...prev, url])\n                            })\n                    }\n                )\n            }\n        }\n    }, [flag, me, images])\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((pos) => {\n            if (pos && pos.coords) {\n                setLat(pos.coords.latitude);\n                setLng(pos.coords.longitude)\n            }\n        })\n    }, [setLat, setLng])\n\n\n    useEffect(() => {\n        if (lat !== 0 && lng !== 0) {\n            getAddress(lat, lng, setLocation);\n        }\n    }, [lat, lng, setLocation])\n    console.log(location)\n\n    if (loading || me === undefined) {\n        return (<>Loading...</>)\n    } else {\n        return (\n            <HomePresenter me={me}\n                term={term}\n                termChange={termChange}\n                posts={posts}\n                imageUrl={imageUrl}\n                flag={flag}\n                setImageUrl={setImageUrl}\n                progress={progress}\n                handleUpload={handleUpload}\n                caption={caption}\n                setCaption={setCaption}\n                UploadPostMutation={UploadPostMutation}\n            />\n        )\n    }\n}\n\nexport default HomeContainer","/Users/jinchulpark/react/jinstagram-client/src/Apollo/apollo.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Routes/AuthHome/AuthHomeContainer.tsx",[],"/Users/jinchulpark/react/jinstagram-client/src/Routes/Home/HomeQueries.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Hooks/Geocoding.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Routes/AuthHome/AuthHomePresenter.tsx",[],"/Users/jinchulpark/react/jinstagram-client/src/Firebase/index.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Components/FeedBox/index.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Components/Header/HeaderPresenter.tsx",[],"/Users/jinchulpark/react/jinstagram-client/src/Components/Header/HeaderStyles.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Components/FeedBox/FeedBoxStyles.ts",[],{"ruleId":"49","severity":1,"message":"50","line":32,"column":18,"nodeType":"51","messageId":"52","endLine":32,"endColumn":25},{"ruleId":"49","severity":1,"message":"53","line":35,"column":12,"nodeType":"51","messageId":"52","endLine":35,"endColumn":24},"@typescript-eslint/no-unused-vars","'setPage' is assigned a value but never used.","Identifier","unusedVar","'searchedUser' is assigned a value but never used."]
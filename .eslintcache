[{"/Users/jinchulpark/react/jinstagram-client/src/Routes/Home/HomeContainer.tsx":"1","/Users/jinchulpark/react/jinstagram-client/src/Apollo/apollo.ts":"2","/Users/jinchulpark/react/jinstagram-client/src/Routes/AuthHome/AuthHomeContainer.tsx":"3","/Users/jinchulpark/react/jinstagram-client/src/Routes/Home/HomeQueries.ts":"4","/Users/jinchulpark/react/jinstagram-client/src/Hooks/Geocoding.ts":"5","/Users/jinchulpark/react/jinstagram-client/src/Routes/AuthHome/AuthHomePresenter.tsx":"6","/Users/jinchulpark/react/jinstagram-client/src/Firebase/index.ts":"7","/Users/jinchulpark/react/jinstagram-client/src/Components/FeedBox/index.ts":"8","/Users/jinchulpark/react/jinstagram-client/src/Components/Header/HeaderPresenter.tsx":"9","/Users/jinchulpark/react/jinstagram-client/src/Components/Header/HeaderStyles.ts":"10","/Users/jinchulpark/react/jinstagram-client/src/Components/FeedBox/FeedBoxStyles.ts":"11","/Users/jinchulpark/react/jinstagram-client/src/Routes/AuthHome/AuthHomeQueries.ts":"12","/Users/jinchulpark/react/jinstagram-client/src/Routes/Home/HomePresenter.tsx":"13","/Users/jinchulpark/react/jinstagram-client/src/Components/Footer/index.ts":"14","/Users/jinchulpark/react/jinstagram-client/src/Components/Footer/FooterPresenter.tsx":"15","/Users/jinchulpark/react/jinstagram-client/src/Components/Footer/FooterStyles.ts":"16","/Users/jinchulpark/react/jinstagram-client/src/Routes/Home/HomeStyles.ts":"17","/Users/jinchulpark/react/jinstagram-client/src/Components/FeedBox/FeedBoxPresenter.tsx":"18","/Users/jinchulpark/react/jinstagram-client/src/Components/Header/index.ts":"19","/Users/jinchulpark/react/jinstagram-client/src/Components/FeedBox/FeedBoxContainer.tsx":"20","/Users/jinchulpark/react/jinstagram-client/src/Components/Routes.tsx":"21","/Users/jinchulpark/react/jinstagram-client/src/sharedquaries.ts":"22","/Users/jinchulpark/react/jinstagram-client/src/Styles/Theme.ts":"23"},{"size":5404,"mtime":1610123684806,"results":"24","hashOfConfig":"25"},{"size":1978,"mtime":1609532563570,"results":"26","hashOfConfig":"25"},{"size":7036,"mtime":1609754981039,"results":"27","hashOfConfig":"25"},{"size":942,"mtime":1610124485743,"results":"28","hashOfConfig":"25"},{"size":577,"mtime":1609978607930,"results":"29","hashOfConfig":"25"},{"size":6819,"mtime":1609955562011,"results":"30","hashOfConfig":"25"},{"size":246,"mtime":1609955562010,"results":"31","hashOfConfig":"25"},{"size":84,"mtime":1609877259533,"results":"32","hashOfConfig":"25"},{"size":810,"mtime":1609876577970,"results":"33","hashOfConfig":"25"},{"size":768,"mtime":1609875385986,"results":"34","hashOfConfig":"25"},{"size":2649,"mtime":1610127094091,"results":"35","hashOfConfig":"25"},{"size":1446,"mtime":1609721298046,"results":"36","hashOfConfig":"25"},{"size":2222,"mtime":1610123675029,"results":"37","hashOfConfig":"25"},{"size":81,"mtime":1609679592194,"results":"38","hashOfConfig":"25"},{"size":279,"mtime":1609679973993,"results":"39","hashOfConfig":"25"},{"size":479,"mtime":1609679972529,"results":"40","hashOfConfig":"25"},{"size":1100,"mtime":1610048031965,"results":"41","hashOfConfig":"25"},{"size":2164,"mtime":1610127045205,"results":"42","hashOfConfig":"25"},{"size":81,"mtime":1609795595994,"results":"43","hashOfConfig":"25"},{"size":815,"mtime":1610126416700,"results":"44","hashOfConfig":"25"},{"size":687,"mtime":1609955562009,"results":"45","hashOfConfig":"25"},{"size":599,"mtime":1609757931489,"results":"46","hashOfConfig":"25"},{"size":657,"mtime":1609679163959,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"t19lgf",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jinchulpark/react/jinstagram-client/src/Routes/Home/HomeContainer.tsx",["99","100","101"],"import { useMutation, useQuery } from '@apollo/client'\nimport React, { useEffect, useState } from 'react'\nimport { toast } from 'react-toastify'\nimport { storage } from '../../Firebase'\nimport { getAddress } from '../../Hooks/Geocoding'\nimport { ME } from '../../sharedquaries'\nimport {\n    GetFullPost,\n    GetFullPostVariables,\n    Me,\n    SearchUser,\n    SearchUserVariables,\n    UploadPost,\n    UploadPostVariables\n} from '../../types/api'\nimport HomePresenter from './HomePresenter'\nimport useInput from '../../Hooks/useInput'\nimport {\n    GET_FULL_POST,\n    SEARCH_USER,\n    UPLOAD_POST\n} from './HomeQueries'\n\n\nconst HomeContainer = () => {\n    const [me, setMe] = useState<any>();\n    const [flag, setFlag] = useState<boolean>(false);\n    const [images, setImages] = useState<any>()\n    const [caption, setCaption] = useInput(\"\")\n    const [imageUrl, setImageUrl] = useState<string[]>([]);\n    const [progress, setProgress] = useState(1);\n    const [page, setPage] = useState<number>(1);\n    const [term, termChange] = useInput(\"\")\n    const [posts, setPosts] = useState<any>();\n    const [searchedUser, setSearchedUser] = useState<any>()\n    const [lat, setLat] = useState<number>(0)\n    const [lng, setLng] = useState<number>(0)\n    const [location, setLocation] = useState<string>(\"\")\n\n    const { loading } = useQuery<Me>(ME, {\n        onCompleted: ({ Me }) => {\n            const { ok, err, user } = Me\n            if (ok && user) {\n                setMe(user);\n            } else if (err) {\n                toast.error(err);\n            }\n        }\n    })\n\n    useQuery<SearchUser, SearchUserVariables>(SEARCH_USER, {\n        skip: term === \"\",\n        variables: {\n            term\n        },\n        onCompleted: ({ SearchUser }) => {\n            const { ok, err, users } = SearchUser;\n            if (ok) {\n                if (users) {\n                    setSearchedUser(users);\n                }\n            } else {\n                console.log(err)\n            }\n        }\n    })\n\n    useQuery<GetFullPost, GetFullPostVariables>(GET_FULL_POST, {\n        variables: {\n            page: 1\n        },\n        onCompleted: ({ GetFullPost }) => {\n            const { ok, err, post } = GetFullPost;\n            if (ok && post) {\n                setPosts(post)\n            } else {\n                console.log(err)\n            }\n        }\n    })\n\n    const [UploadPostMutation] = useMutation<UploadPost, UploadPostVariables>(UPLOAD_POST, {\n        variables: {\n            caption,\n            location,\n            images: imageUrl\n        }, onCompleted: v => console.log(v, \"mutation\")\n    })\n\n    const handleUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n        event.preventDefault()\n        if (event.target && event.target.files) {\n            if (event.target !== null && event.target.files && event.target.files.length !== null) {\n                setImages(event.target.files)\n                setFlag(true);\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (flag && me && images) {\n            for (let i = 0; i < images.length; i++) {\n                let uploadTask = storage\n                    .ref(`/${me.username}/images/${images[i].name}`)\n                    .put(images[i]);\n                uploadTask.on(\n                    \"state_changed\",\n                    (snapshot) => {\n                        const percentUploaded = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n                        setProgress(percentUploaded)\n                    },\n                    (err) => { console.log(err) },\n                    () => {\n                        storage.ref(`/${me.username}/images/`)\n                            .child(`${images[i].name}`)\n                            .getDownloadURL()\n                            .then((url) => {\n                                console.log(url)\n                                setImageUrl(prev => [...prev, url])\n                            })\n                    }\n                )\n            }\n        }\n    }, [flag, me, images])\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((pos) => {\n            if (pos && pos.coords) {\n                setLat(pos.coords.latitude);\n                setLng(pos.coords.longitude)\n            }\n        })\n    }, [setLat, setLng])\n\n\n    useEffect(() => {\n        if (lat !== 0 && lng !== 0) {\n            getAddress(lat, lng, setLocation);\n        }\n    }, [lat, lng, setLocation])\n\n    const handlePost = async () => {\n        if (!imageUrl && caption === \"\") {\n            toast.error(\"You need to upload any photo and caption\")\n        } else if (imageUrl && caption) {\n            console.log(\"came?\")\n            await UploadPostMutation();\n        }\n    }\n\n\n    if (loading || me === undefined) {\n        return (<>Loading...</>)\n    } else {\n        return (\n            <HomePresenter me={me}\n                term={term}\n                termChange={termChange}\n                posts={posts}\n                imageUrl={imageUrl}\n                flag={flag}\n                setImageUrl={setImageUrl}\n                progress={progress}\n                handleUpload={handleUpload}\n                caption={caption}\n                setCaption={setCaption}\n                UploadPostMutation={UploadPostMutation}\n                handlePost={handlePost}\n            />\n        )\n    }\n}\n\nexport default HomeContainer",["102","103"],"/Users/jinchulpark/react/jinstagram-client/src/Apollo/apollo.ts",[],["104","105"],"/Users/jinchulpark/react/jinstagram-client/src/Routes/AuthHome/AuthHomeContainer.tsx",[],"/Users/jinchulpark/react/jinstagram-client/src/Routes/Home/HomeQueries.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Hooks/Geocoding.ts",[],["106","107"],"/Users/jinchulpark/react/jinstagram-client/src/Routes/AuthHome/AuthHomePresenter.tsx",[],"/Users/jinchulpark/react/jinstagram-client/src/Firebase/index.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Components/FeedBox/index.ts",[],["108","109"],"/Users/jinchulpark/react/jinstagram-client/src/Components/Header/HeaderPresenter.tsx",[],"/Users/jinchulpark/react/jinstagram-client/src/Components/Header/HeaderStyles.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Components/FeedBox/FeedBoxStyles.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Routes/AuthHome/AuthHomeQueries.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Routes/Home/HomePresenter.tsx",[],"/Users/jinchulpark/react/jinstagram-client/src/Components/Footer/index.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Components/Footer/FooterPresenter.tsx",[],"/Users/jinchulpark/react/jinstagram-client/src/Components/Footer/FooterStyles.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Routes/Home/HomeStyles.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Components/FeedBox/FeedBoxPresenter.tsx",[],"/Users/jinchulpark/react/jinstagram-client/src/Components/Header/index.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Components/FeedBox/FeedBoxContainer.tsx",[],"/Users/jinchulpark/react/jinstagram-client/src/Components/Routes.tsx",[],"/Users/jinchulpark/react/jinstagram-client/src/sharedquaries.ts",[],"/Users/jinchulpark/react/jinstagram-client/src/Styles/Theme.ts",[],{"ruleId":"110","severity":1,"message":"111","line":32,"column":12,"nodeType":"112","messageId":"113","endLine":32,"endColumn":16},{"ruleId":"110","severity":1,"message":"114","line":32,"column":18,"nodeType":"112","messageId":"113","endLine":32,"endColumn":25},{"ruleId":"110","severity":1,"message":"115","line":35,"column":12,"nodeType":"112","messageId":"113","endLine":35,"endColumn":24},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"116","replacedBy":"120"},{"ruleId":"118","replacedBy":"121"},{"ruleId":"116","replacedBy":"122"},{"ruleId":"118","replacedBy":"123"},{"ruleId":"116","replacedBy":"124"},{"ruleId":"118","replacedBy":"125"},"@typescript-eslint/no-unused-vars","'page' is assigned a value but never used.","Identifier","unusedVar","'setPage' is assigned a value but never used.","'searchedUser' is assigned a value but never used.","no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],["126"],["127"],["126"],["127"],"no-global-assign","no-unsafe-negation"]
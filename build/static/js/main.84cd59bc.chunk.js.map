{"version":3,"sources":["Apollo/apollo.ts","key.ts","Firebase/index.ts","Hooks/Geocoding.ts","sharedquaries.ts","Components/Icon.tsx","Components/Header/HeaderStyles.ts","Hooks/useInput.ts","Components/Header/index.ts","Components/Header/HeaderPresenter.tsx","Components/Loader.tsx","Components/FeedBox/FeedBoxStyles.ts","Components/FeedBox/FeedBoxPresenter.tsx","Components/FeedBox/FeedBoxQueries.ts","Routes/Home/HomeQueries.ts","Components/FeedBox/index.ts","Components/FeedBox/FeedBoxContainer.tsx","Routes/Home/HomeStyles.ts","Routes/Home/HomePresenter.tsx","Routes/Home/index.ts","Routes/Home/HomeContainer.tsx","Apollo/authResolvers.ts","Components/Footer/FooterStyles.ts","Components/Footer/index.ts","Components/Footer/FooterPresenter.tsx","Asset/logo.png","Routes/AuthHome/AuthStyles.ts","Routes/AuthHome/AuthHomePresenter.tsx","Routes/AuthHome/AuthHomeQueries.ts","Routes/AuthHome/index.ts","Routes/AuthHome/AuthHomeContainer.tsx","Routes/Profile/ProfileStyles.ts","Components/PopUp/PopUpQueries.ts","Components/PopUp/PopUpStyles.ts","Components/PopUp/index.ts","Components/PopUp/PopUpPresenter.tsx","Components/ChatPopup/ChatPopupStyles.ts","Components/ChatPopup/index.ts","Components/ChatPopup/ChatPopupPresenter.tsx","Components/FollowPopup/FollowPopupStyles.ts","Components/FollowPopup/index.ts","Components/FollowPopup/FollowPopupPresenter.tsx","Routes/Profile/ProfilePresenter.tsx","Routes/Profile/ProfileQueries.ts","Routes/Profile/index.ts","Routes/Profile/ProfileContainer.tsx","Components/ChatMessage.tsx","Components/Form.tsx","Routes/Chat/ChatStyles.ts","Routes/Chat/ChatPresenter.tsx","Routes/Chat/ChatQueries.ts","Routes/Chat/index.ts","Routes/Chat/ChatContainer.tsx","Components/Routes.tsx","Styles/Theme.ts","Components/App.tsx","index.tsx"],"names":["typeDefs","gql","isLoggedInVar","makeVar","localStorage","getItem","cache","InMemoryCache","typePolicies","Query","fields","isLoggedIn","read","authMiddle","ApolloLink","operation","forward","setContext","headers","Authorization","wsLink","WebSocketLink","uri","options","reconnect","lazy","connectionParams","Bearer","httpLink","HttpLink","errLink","onError","graphqlErrors","networkError","map","message","console","log","linkComb","split","query","getMainDefinition","kind","client","ApolloClient","link","from","concat","authorization","googleApi","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","storage","getAddress","lat","lng","setLocation","a","url","axios","get","response","data","results","address_components","long_name","ME","SEE_USER","SEARCH_USER","HeartEmpty","xmlns","width","height","viewBox","d","HeartFull","fill","Comment","Logo","version","preserveAspectRatio","transform","stroke","ImageUpload","Loading","Message","Container","styled","div","Col","Search","input","SearchResult","SearchLink","Link","SearchRow","SearchInfo","SearchUsername","span","ExtendedLink","ProfileImage","img","useInput","defaultValue","useState","value","setValue","e","target","HeaderPresenter","me","setMe","open","setOpen","term","termChange","searchedUser","setSearchedUser","loading","useQuery","onCompleted","Me","ok","err","user","skip","variables","SearchUser","users","useEffect","handleClick","document","addEventListener","removeEventListener","to","type","placeholder","onChange","length","index","username","src","profilePhoto","alt","rotate","keyframes","Rotate","Loader","Header","header","UserCol","Location","Images","Image","props","showing","Dots","Dot","button","current","Button","Meta","Buttons","Timestamp","Textarea","Comments","ul","li","Caption","CommentLink","FeedBoxPresenter","posts","currentItem","setCurrentItem","isLiked","handleToggleLike","setIsLiked","likeCount","comment","commentChange","commentS","time","Math","floor","createdAt","date","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","min","getMinutes","pathname","state","id","style","fontWeight","location","images","image","onClick","caption","comments","text","com","TOGGLE_LIKE","ADD_COMMENT","GET_LIKE","UPLOAD_POST","GET_FULL_POST","FeedBoxContainer","likes","setLikes","setLikeCount","setCommentS","setComment","userId","useMutation","postId","ToggleLike","ret","ToggleLikeMutation","useLazyQuery","GetLike","getPost","idx","findIndex","like","undefined","AddComment","refetchQueries","page","AddCommentMutation","preventDefault","handleUserKeyPress","useCallback","event","keyCode","Wrapper","Post","TextareaAutosize","UploadDiv","Row","HomePresenter","setPage","handleUpload","progress","flag","setCaption","handlePost","useDropzone","accept","getRootProps","getInputProps","scrolldown","window","innerHeight","documentElement","scrollTop","offsetHeight","post","FeedBox","HomeContainer","setFlag","setImages","imageUrl","setImageUrl","setProgress","setPosts","setLat","setLng","toast","error","refetch","fetchPolicy","GetFullPost","UploadPost","UploadPostMutation","i","ref","name","put","on","snapshot","percentUploaded","round","bytesTransferred","totalBytes","child","getDownloadURL","then","prev","getLocationInterval","setInterval","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","clearInterval","files","userLogIn","token","writeQuery","setItem","CopyRight","FooterPresenter","Box","Head","Title","Mid","Form","form","Input","Signup","Bot","SocialButton","SignUpInput","AuthHomePresenter","action","setAction","secret","secretChange","email","emailChange","onSubmit","setGoogleId","setFbId","setProfilePhoto","setSocialEmail","setLastName","setFirstName","setUserName","setIntro","setSignUpFirstName","setSignUpLastName","intro","signUpFirstName","signUpLastName","FacebookLoginMutation","GoogleLoginMutatation","responseFromGoogle","profileObj","familyName","givenName","googleId","Helmet","logo","autoFocus","callback","userID","picture","render","renderProps","disabled","clientId","onSuccess","onFailure","cookiePolicy","Footer","FACEBOOK_CONNECT","GOOGLE_CONNECT","CREATE_ACCOUNT","REQUEST_CODE","CONFIRM_SECRET","AuthHomeContainer","firstName","lastName","socialEmail","fbId","result","FacebookConnect","GoogleConnect","success","CreateAccount","setTimeout","CreateAccountMutation","RequestCode","RequestCodeMutation","code","ConfirmSecret","ConfirmSecretMutation","UserDetail","UserDetailCol","UserDetailRow","FollowRow","FollowCol","FollowTitle","FollowCount","Intro","p","LogoutButton","Profile","Username","FollowingButton","UserPosts","PostOverlay","PostContainer","bg","EDIT_USER","Headbar","ExitButton","PopupBody","PopUpBottom","PopUpPresenter","setPopup","setImage","firstNameChange","lastNameChange","introChange","EditUser","EditUserMutation","percentUpload","TitleDiv","h2","SmallRow","RowUsername","RowMessage","ChatRow","ChatInfo","ChatPopupPresenter","clicked","chatFrom","chat","messages","chatTo","FollowPopupPresenter","setFollowPopup","followers","ProfilePresenter","FollowingHandler","followingS","isMe","popup","followPopup","chatPopup","setChatPopup","ChatHandler","ChatPopup","handleFollowPopup","FollowPopup","PopUp","removeItem","href","TOGGLE_FOLLOWING","CREATE_CHAT","ProfileContainer","match","params","setIsMe","setUser","setFollowingS","SeeUser","isFollowing","forceHistory","createBrowserHistory","forceRefresh","ToggleFollowing","ToggleFollowingMutation","CreateChat","push","CreateChatMutation","toId","mine","theme","blueColor","greyColor","ChatMessage","StyledForm","submitFn","children","LoadingWrapper","MessageBox","MessageInput","MessageBoxBottom","ExtendedForm","renderMessage","msg","ChatPresenter","onChangeMessage","SendMessageMutation","chatId","useRef","scrollHeight","GET_CHAT_ROOM","MESSAGE_SUBSCRIPTION","SEND_MESSAGE","ChatContainer","setMessage","setMessages","setChat","parseInt","GetChatRoom","subscribeToMore","updateQuery","subscriptionData","useSubscription","onSubscriptionComplete","onSubscriptionData","MessageSubscription","SendMessage","LoggedInRoutes","exact","path","component","Home","Chat","LoggedOutRoutes","AuthHome","AppRouter","basename","yellowColor","greenColor","Is_LOGGED_IN","AppContext","createContext","App","Provider","Routes","draggable","position","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.84cd59bc.chunk.js","sourcesContent":["import {\n  gql,\n  makeVar,\n  InMemoryCache,\n  ApolloLink,\n  Operation,\n  HttpLink,\n  NormalizedCacheObject,\n  split,\n  ApolloClient,\n  concat\n} from \"@apollo/client\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\n\nconst typeDefs = gql`\n  extend type Query {\n    isLoggedIn: Boolean!\n  }\n`;\n\nexport const isLoggedInVar = makeVar<boolean>(!!localStorage.getItem(\"Bearer\"));\n\nconst cache: InMemoryCache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n        isLoggedIn: {\n          read() {\n            return isLoggedInVar();\n          }\n        }\n      }\n    }\n  }\n});\n\nconst authMiddle = new ApolloLink((operation: Operation, forward: any): any => {\n  operation.setContext({\n    headers: {\n      Authorization: localStorage.getItem(\"Bearer\") || \"\"\n    }\n  });\n  return forward(operation);\n});\n\nconst wsLink = new WebSocketLink({\n  // uri: \"ws://localhost:4000/subscription\",\n  uri: \"ws://jinsta.herokuapp.com/subscription\",\n  options: {\n    reconnect: true,\n    lazy: true,\n    connectionParams: {\n      Bearer: localStorage.getItem(\"Bearer\") || \"\"\n    }\n  }\n});\n\nconst httpLink = new HttpLink({\n  // uri: \"http://localhost:4000/graphql\"\n  uri: \"https://jinsta.herokuapp.com/graphql\"\n});\n\nconst errLink = onError(({ graphqlErrors, networkError }: any) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message }: any) =>\n      console.log(\"net work graphql error :\", message)\n    );\n  }\n});\n\nconst linkComb = split(\n  ({ query }) => {\n    const { kind, operation }: any = getMainDefinition(query);\n    return kind === \"OperationDefinition\" && operation === \"subscription\";\n  },\n  wsLink,\n  httpLink\n);\n\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n  cache,\n  link: ApolloLink.from([errLink, concat(authMiddle, linkComb)]),\n  headers: {\n    authorization: localStorage.getItem(\"Bearer\") || \"\"\n  },\n  typeDefs\n});\n\nexport default client;\n","export const config = {\n  apiKey: \"AIzaSyANPA73ldSYuvfCD7vAxt_1IMIFgSUHSC0\",\n  authDomain: \"jinsta-storage.firebaseapp.com\",\n  databaseURL: \"https://jinsta-storage.firebaseio.com\",\n  projectId: \"jinsta-storage\",\n  storageBucket: \"jinsta-storage.appspot.com\",\n  messagingSenderId: \"374149106517\",\n  appId: \"1:374149106517:web:aa23e6a0e3ce4014fdbddc\",\n  measurementId: \"G-9HXYJBLQW2\"\n};\n\nexport const googleApi = {\n  key: \"AIzaSyA4NwaePp5gXgNcXDnCejP2vrfKz8mZCzs\"\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport { config } from \"../key\";\n\nconst firebaseConfig = config;\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\nexport { storage, firebase as default };\n","import React from \"react\";\nimport axios from \"axios\";\nimport { googleApi } from \"../key\";\n\nexport const getAddress = async (\n  lat: number,\n  lng: number,\n  setLocation: React.Dispatch<React.SetStateAction<string>>\n) => {\n  const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${googleApi.key}`;\n  try {\n    const response = await axios.get(url);\n    if (response) {\n      setLocation(response.data?.results[0].address_components[2].long_name);\n    } else {\n      console.log(\" no response\");\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import { gql } from \"@apollo/client\";\n\nexport const ME = gql`\n  query Me {\n    Me {\n      ok\n      err\n      user {\n        id\n        email\n        profilePhoto\n        firstName\n        lastName\n        username\n        intro\n        chatTo {\n          id\n          to {\n            id\n            username\n            profilePhoto\n          }\n          from {\n            id\n            username\n            profilePhoto\n          }\n          messages {\n            text\n            user {\n              username\n            }\n          }\n        }\n        chatFrom {\n          id\n          to {\n            id\n            username\n            profilePhoto\n          }\n          from {\n            id\n            username\n            profilePhoto\n          }\n          messages {\n            text\n            user {\n              username\n            }\n          }\n        }\n        posts {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const SEE_USER = gql`\n  query SeeUser($username: String!) {\n    SeeUser(username: $username) {\n      ok\n      err\n      user {\n        id\n        email\n        profilePhoto\n        firstName\n        lastName\n        username\n        isFollowing\n        intro\n        following {\n          id\n          username\n          firstName\n          lastName\n        }\n        followers {\n          id\n          username\n          firstName\n          profilePhoto\n          lastName\n        }\n        posts {\n          id\n          caption\n          location\n          images {\n            url\n          }\n        }\n        comments {\n          id\n        }\n        likes {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const SEARCH_USER = gql`\n  query SearchUser($term: String!) {\n    SearchUser(term: $term) {\n      ok\n      err\n      users {\n        id\n        username\n        profilePhoto\n      }\n    }\n  }\n`;\n\nexport const GET_CHAT = gql`\n  query GetChat {\n    GetChat {\n      ok\n      err\n      chat {\n        id\n        from {\n          id\n          profilePhoto\n          username\n        }\n        to {\n          id\n          profilePhoto\n          username\n        }\n        messages {\n          user {\n            id\n            username\n          }\n          text\n          createdAt\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nexport const Compass = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6 5.999l-5.621 2.986c-.899-.104-1.806.191-2.474.859-.662.663-.95 1.561-.862 2.428l-3.043 5.728 5.724-3.042c.884.089 1.772-.205 2.432-.865.634-.634.969-1.524.859-2.473l2.985-5.621zm-5.97 7.22c-.689 0-1.25-.559-1.25-1.249-.001-.691.559-1.251 1.25-1.25.69 0 1.25.56 1.25 1.25-.001.689-.56 1.249-1.25 1.249z\" />\n  </svg>\n);\n\nexport const HeartEmpty = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M6.28 3c3.236.001 4.973 3.491 5.72 5.031.75-1.547 2.469-5.021 5.726-5.021 2.058 0 4.274 1.309 4.274 4.182 0 3.442-4.744 7.851-10 13-5.258-5.151-10-9.559-10-13 0-2.676 1.965-4.193 4.28-4.192zm.001-2c-3.183 0-6.281 2.187-6.281 6.192 0 4.661 5.57 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-4.011-3.097-6.182-6.274-6.182-2.204 0-4.446 1.042-5.726 3.238-1.285-2.206-3.522-3.248-5.719-3.248z\" />\n  </svg>\n);\n\nexport const HeartFull = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"#ED4956\"\n  >\n    <path d=\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\" />\n  </svg>\n);\n\nexport const User = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M12 2c2.757 0 5 2.243 5 5.001 0 2.756-2.243 5-5 5s-5-2.244-5-5c0-2.758 2.243-5.001 5-5.001zm0-2c-3.866 0-7 3.134-7 7.001 0 3.865 3.134 7 7 7s7-3.135 7-7c0-3.867-3.134-7.001-7-7.001zm6.369 13.353c-.497.498-1.057.931-1.658 1.302 2.872 1.874 4.378 5.083 4.972 7.346h-19.387c.572-2.29 2.058-5.503 4.973-7.358-.603-.374-1.162-.811-1.658-1.312-4.258 3.072-5.611 8.506-5.611 10.669h24c0-2.142-1.44-7.557-5.631-10.647z\" />\n  </svg>\n);\n\nexport const Comment = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M12 3c5.514 0 10 3.476 10 7.747 0 4.272-4.48 7.748-9.986 7.748-.62 0-1.092-.046-1.759-.097-1 .776-1.774 1.403-3.485 1.962.26-1.383-.113-2.259-.514-3.259-2.383-1.505-4.256-3.411-4.256-6.354 0-4.271 4.486-7.747 10-7.747zm0-2c-6.627 0-12 4.363-12 9.747 0 3.13 1.816 5.916 4.641 7.699.867 2.167-1.084 4.008-3.143 4.502 3.085.266 6.776-.481 9.374-2.497 7.08.54 13.128-3.988 13.128-9.704 0-5.384-5.373-9.747-12-9.747z\" />\n  </svg>\n);\n\nexport const CommentFull = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M12 1c-6.627 0-12 4.364-12 9.749 0 3.131 1.817 5.917 4.64 7.7.868 2.167-1.083 4.008-3.142 4.503 2.271.195 6.311-.121 9.374-2.498 7.095.538 13.128-3.997 13.128-9.705 0-5.385-5.373-9.749-12-9.749z\" />\n  </svg>\n);\n\nexport const Logo = () => (\n  <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"36\" height=\"36\" viewBox=\"0 0 1200 1200\"\n    preserveAspectRatio=\"xMidYMid meet\">\n    <g transform=\"translate(0.000000,1200.000000) scale(0.100000,-0.100000)\"\n      fill=\"#000000\" stroke=\"none\">\n      <path d=\"M2457 8082 l-2057 -2057 0 -843 0 -842 2060 0 2060 0 0 -1035 0\n-1035 1035 0 1035 0 0 1875 0 1875 -2049 2 -2049 3 2050 2058 2050 2057 -1038\n0 -1039 0 -2058 -2058z\"/>\n      <path d=\"M7470 9105 c0 -569 2 -1035 4 -1035 3 0 466 462 1030 1028 l1025\n1027 1 -1025 0 -1025 -1030 -1030 -1030 -1030 0 -1032 0 -1033 2065 0 2065 0\n0 1037 0 1038 -1030 -1030 -1030 -1030 0 1020 0 1020 1030 1030 1030 1030 0\n1037 0 1038 -2065 0 -2065 0 0 -1035z\"/>\n    </g>\n  </svg>\n\n);\n\nexport const ImageUpload = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M9 12c0-.552.448-1 1.001-1s.999.448.999 1-.446 1-.999 1-1.001-.448-1.001-1zm6.2 0l-1.7 2.6-1.3-1.6-3.2 4h10l-3.8-5zm5.8-7v-2h-21v15h2v-13h19zm3 2v14h-20v-14h20zm-2 2h-16v10h16v-10z\" /></svg>\n)\n\nexport const Loading = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M20.944 12.979c-.489 4.509-4.306 8.021-8.944 8.021-2.698 0-5.112-1.194-6.763-3.075l1.245-1.633c1.283 1.645 3.276 2.708 5.518 2.708 3.526 0 6.444-2.624 6.923-6.021h-2.923l4-5.25 4 5.25h-3.056zm-15.864-1.979c.487-3.387 3.4-6 6.92-6 2.237 0 4.228 1.059 5.51 2.698l1.244-1.632c-1.65-1.876-4.061-3.066-6.754-3.066-4.632 0-8.443 3.501-8.941 8h-3.059l4 5.25 4-5.25h-2.92z\" />\n  </svg>\n);\n\nexport const Message = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M7 11c-.828 0-1.5-.671-1.5-1.5s.672-1.5 1.5-1.5c.829 0 1.5.671 1.5 1.5s-.671 1.5-1.5 1.5zm5 0c-.828 0-1.5-.671-1.5-1.5s.672-1.5 1.5-1.5c.829 0 1.5.671 1.5 1.5s-.671 1.5-1.5 1.5zm5 0c-.828 0-1.5-.671-1.5-1.5s.672-1.5 1.5-1.5c.829 0 1.5.671 1.5 1.5s-.671 1.5-1.5 1.5zm5-8v13h-11.643l-4.357 3.105v-3.105h-4v-13h20zm2-2h-24v16.981h4v5.019l7-5.019h13v-16.981z\" /></svg>\n)\n\nexport const Settings = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 14.187v-4.374c-2.148-.766-2.726-.802-3.027-1.529-.303-.729.083-1.169 1.059-3.223l-3.093-3.093c-2.026.963-2.488 1.364-3.224 1.059-.727-.302-.768-.889-1.527-3.027h-4.375c-.764 2.144-.8 2.725-1.529 3.027-.752.313-1.203-.1-3.223-1.059l-3.093 3.093c.977 2.055 1.362 2.493 1.059 3.224-.302.727-.881.764-3.027 1.528v4.375c2.139.76 2.725.8 3.027 1.528.304.734-.081 1.167-1.059 3.223l3.093 3.093c1.999-.95 2.47-1.373 3.223-1.059.728.302.764.88 1.529 3.027h4.374c.758-2.131.799-2.723 1.537-3.031.745-.308 1.186.099 3.215 1.062l3.093-3.093c-.975-2.05-1.362-2.492-1.059-3.223.3-.726.88-.763 3.027-1.528zm-4.875.764c-.577 1.394-.068 2.458.488 3.578l-1.084 1.084c-1.093-.543-2.161-1.076-3.573-.49-1.396.581-1.79 1.693-2.188 2.877h-1.534c-.398-1.185-.791-2.297-2.183-2.875-1.419-.588-2.507-.045-3.579.488l-1.083-1.084c.557-1.118 1.066-2.18.487-3.58-.579-1.391-1.691-1.784-2.876-2.182v-1.533c1.185-.398 2.297-.791 2.875-2.184.578-1.394.068-2.459-.488-3.579l1.084-1.084c1.082.538 2.162 1.077 3.58.488 1.392-.577 1.785-1.69 2.183-2.875h1.534c.398 1.185.792 2.297 2.184 2.875 1.419.588 2.506.045 3.579-.488l1.084 1.084c-.556 1.121-1.065 2.187-.488 3.58.577 1.391 1.689 1.784 2.875 2.183v1.534c-1.188.398-2.302.791-2.877 2.183zm-7.125-5.951c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3 1.346-3 3-3zm0-2c-2.762 0-5 2.238-5 5s2.238 5 5 5 5-2.238 5-5-2.238-5-5-5z\" /></svg>\n)\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 4rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Col = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 25px;\n  max-width: 400px;\n`;\n\nexport const Search = styled.input`\n  padding: 12px 12px;\n  width: 300px;\n  border-radius: 4px;\n  border: none;\n  background-color: #e6e6e6;\n  text-align: center;\n`;\n\nexport const SearchResult = styled.div`\n  position: absolute;\n  min-height: 10vh;\n  width: 320px;\n  background-color: white;\n  border-radius: 4px;\n  text-align: center;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  top: 8%;\n`;\n\nexport const SearchLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n\nexport const SearchRow = styled.div`\n  height: 80px;\n  width: 300px;\n  padding-left: 20px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  cursor: pointer;\n  &:hover {\n    background-color: #eee;\n  }\n`;\n\nexport const SearchInfo = styled.div`\n  padding-top: 25px;\n  font-weight: 600px;\n`;\n\nexport const SearchUsername = styled.span`\n  padding-left: 30px;\n  font-weight: 600;\n`;\n\nexport const ExtendedLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ProfileImage = styled.img`\n  width: 50px;\n  height: 50px;\n  object-fit: cover;\n  border-radius: 10rem;\n`;\n","import React, { ReactEventHandler, useState } from \"react\";\n\nconst useInput = (\n  defaultValue: string\n): [\n  string,\n  (event: React.ChangeEvent) => any,\n  React.Dispatch<React.SetStateAction<string>>\n] => {\n  const [value, setValue] = useState(defaultValue);\n\n  const onChange: ReactEventHandler = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const {\n      target: { value }\n    } = e;\n    setValue(value);\n  };\n  return [value, onChange, setValue];\n};\n\nexport default useInput;\n","import HeaderPresenter from \"./HeaderPresenter\";\nexport default HeaderPresenter;\n","import { useQuery } from '@apollo/client';\nimport React, { useEffect, useState } from 'react'\nimport { ME, SEARCH_USER } from '../../sharedquaries';\nimport { Me, SearchUser, SearchUserVariables } from '../../types/api';\nimport { Link } from 'react-router-dom'\nimport { Logo } from '../Icon'\nimport * as S from './HeaderStyles'\nimport useInput from '../../Hooks/useInput';\n\ninterface IProps {\n    url?: string\n\n}\n\nconst HeaderPresenter: React.FC<IProps> = ({ url }) => {\n    const [me, setMe] = useState<any>();\n    const [open, setOpen] = useState<boolean>(false)\n    const [term, termChange] = useInput(\"\")\n    const [searchedUser, setSearchedUser] = useState<any>([]);\n    const { loading } = useQuery<Me>(ME, {\n        onCompleted: ({ Me }) => {\n            const { ok, err, user } = Me;\n            if (ok && user) {\n                setMe(user);\n            } else {\n                console.log(err)\n            }\n        }\n    })\n    useQuery<SearchUser, SearchUserVariables>(SEARCH_USER, {\n        skip: term === \"\",\n        variables: {\n            term\n        },\n        onCompleted: ({ SearchUser }) => {\n            const { ok, err, users } = SearchUser;\n            if (ok && users) {\n                setSearchedUser(users)\n                setOpen(true);\n            }\n            else {\n                console.log(err)\n            }\n        }\n    })\n\n\n\n    useEffect((): any => {\n        const handleClick = () => {\n            setOpen(false);\n        }\n        if (open) {\n            document.addEventListener(\"click\", handleClick);\n            return () => document.removeEventListener('click', handleClick)\n        }\n\n    }, [open, setOpen])\n\n\n    if (loading || !me) {\n        return (\n            <>\n                loading...\n            </>\n        )\n    }\n    return (\n        <S.Container>\n            <S.Col>\n                <Link to=\"/\"><Logo /></Link>\n            </S.Col>\n            <S.Col>\n                <S.Search\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    value={term}\n                    onChange={termChange}\n                />\n                {open ?\n                    (searchedUser && searchedUser.length ?\n                        <S.SearchResult>\n                            {searchedUser.map((user: any, index: number) => {\n                                return (\n                                    <S.SearchLink to={`/profile/${user.username}`} key={index}>\n                                        <S.SearchRow>\n                                            <S.ProfileImage src={user.profilePhoto} alt={user.username} />\n                                            <S.SearchUsername>{user.username}</S.SearchUsername>\n                                        </S.SearchRow>\n                                    </S.SearchLink>\n                                )\n                            })}\n                        </S.SearchResult> : <S.SearchResult>\n                            <S.SearchInfo>No user found</S.SearchInfo>\n                        </S.SearchResult>)\n                    : \"\"}\n            </S.Col>\n            <S.Col>\n                <S.ExtendedLink to={`/profile/${me.username}`}>\n                    <S.ProfileImage src={`${url}`} alt=\"profile\" />\n                </S.ExtendedLink>\n            </S.Col>\n        </S.Container>\n    )\n}\n\nexport default HeaderPresenter","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Loading } from \"./Icon\";\n\nconst rotate = keyframes`\n    from{\n        transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n    }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Rotate = styled.div`\n  display: inline-block;\n  animation: ${rotate} 2s linear infinite;\n  font-size: 1.2rem;\n`;\n\nexport const Loader = () => {\n    return (\n        <Container>\n            <Rotate>\n                <Loading />\n            </Rotate>\n        </Container>\n    );\n};\n\nexport default Loader","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\ninterface IStyleProps {\n  url: string;\n  showing: boolean;\n}\n\ninterface IDotProps {\n  current: boolean;\n}\n\nexport const Container = styled.div`\n  width: 100%;\n  border: 1px solid #e6e6e6;\n  border-radius: 4px;\n  background-color: white;\n  width: 500px;\n  user-select: none;\n  margin-bottom: 25px;\n  a {\n    color: inherit;\n  }\n`;\n\nexport const Header = styled.header`\n  padding: 15px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProfileImage = styled.img`\n  width: 50px;\n  height: 50px;\n  object-fit: cover;\n  border-radius: 10rem;\n`;\n\nexport const UserCol = styled.div`\n  margin-left: 10px;\n`;\n\nexport const ExtendedLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Location = styled.span`\n  display: block;\n  margin-top: 5px;\n  font-size: 12px;\n`;\n\nexport const Images = styled.div`\n  position: relative;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  flex-shrink: 0;\n`;\n\nexport const Image = styled.div<IStyleProps>`\n  max-width: 100%;\n  width: 100%;\n  position: absolute;\n  height: 500px;\n  top: 0;\n  background-image: url(${(props) => props.url});\n  background-size: cover;\n  background-position: center;\n  opacity: ${(props) => (props.showing ? 1 : 0)};\n  transition: opacity 0.5s linear;\n`;\n\nexport const Dots = styled.div`\n  position: absolute;\n  z-index: 1;\n  bottom: 3%;\n  left: 45%;\n  width: 60px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const Dot = styled.button<IDotProps>`\n  border: none;\n  background-color: ${(props) => (props.current ? \"#e6e6e6\" : \"gray\")};\n  border-radius: 10rem;\n  height: 10px;\n  width: 10px;\n  cursor: pointer;\n`;\n\nexport const Button = styled.span`\n  cursor: pointer;\n`;\n\nexport const Meta = styled.div`\n  padding: 15px;\n`;\n\nexport const Buttons = styled.div`\n  ${Button} {\n    &:first-child {\n      margin-right: 10px;\n    }\n  }\n  margin-bottom: 10px;\n`;\n\nexport const Timestamp = styled.span`\n  font-weight: 400;\n  text-transform: uppercase;\n  opacity: 0.5;\n  display: block;\n  font-size: 12px;\n  margin: 10px 0px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #003569;\n`;\n\nexport const Textarea = styled.input`\n  border: none;\n  width: 100%;\n  resize: none;\n  font-size: 14px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Comments = styled.ul`\n  margin-top: 10px;\n  list-style: none;\n`;\n\nexport const Comment = styled.li`\n  margin-bottom: 7px;\n  span {\n    margin-right: 5px;\n  }\n`;\n\nexport const Caption = styled.div`\n  margin: 10px 0px;\n`;\n\nexport const CommentLink = styled(Link)`\n  text-decoration: none;\n`;\n","import React from 'react';\nimport * as S from './FeedBoxStyles'\nimport { Comment, HeartEmpty, HeartFull } from '../Icon'\n\ninterface IProps {\n    posts: any\n    currentItem: number\n    setCurrentItem: React.Dispatch<React.SetStateAction<number>>\n    isLiked: boolean\n    setIsLiked: React.Dispatch<React.SetStateAction<boolean>>\n    handleToggleLike: any\n    likeCount: number\n    comment: string\n    commentChange: (\n        e: React.ChangeEvent<HTMLInputElement>) => void\n    commentS: any\n    me: any\n}\n\nconst FeedBoxPresenter: React.FC<IProps> = ({\n    posts,\n    currentItem,\n    setCurrentItem,\n    isLiked,\n    setIsLiked,\n    handleToggleLike,\n    likeCount,\n    comment,\n    commentChange,\n    commentS,\n    me\n}) => {\n    let time = Math.floor(posts.createdAt / 1000)\n    time *= 1000\n    const date = new Date(time)\n    const year = date.getFullYear()\n    const month = date.getMonth() + 1\n    const day = date.getDate()\n    const hour = date.getHours()\n    const min = date.getMinutes()\n\n    return (\n        <S.Container>\n            <S.Header>\n                <S.ProfileImage src={posts.user.profilePhoto} />\n                <S.UserCol>\n                    <S.ExtendedLink to={{\n                        pathname: `/profile/${posts.user.username}`,\n                        state: { id: posts.user.id }\n                    }}><span style={{ fontWeight: 600 }}>{posts.user.username}</span></S.ExtendedLink>\n                    <S.Location>{posts.location}</S.Location>\n                </S.UserCol>\n            </S.Header>\n            <S.Images>\n                {posts.images && posts.images.map((image: any, index: number) => {\n                    return (<S.Image url={image.url} showing={index === currentItem} key={index}></S.Image>)\n                })}\n                <S.Dots>{posts.images && posts.images.map((image: any, index: number) => {\n                    return (<S.Dot onClick={() => setCurrentItem(index)} current={index === currentItem} key={index} />)\n                })}</S.Dots>\n            </S.Images>\n            <S.Meta>\n                <S.Buttons>\n                    <S.Button onClick={handleToggleLike}>\n                        {isLiked ? <HeartFull /> : <HeartEmpty />}\n                    </S.Button>\n                    <S.Button><Comment /></S.Button>\n                </S.Buttons>\n                {likeCount === 1 ?\n                    <span style={{ fontWeight: 600 }}>1 like</span> :\n                    <span style={{ fontWeight: 600 }}>{likeCount} likes</span>\n                }\n                <S.Caption>\n                    <S.CommentLink to={`/profile/${posts.user.username}`} style={{ fontWeight: 600 }}>{posts.user.username}</S.CommentLink > {posts.caption}\n                </S.Caption>\n                {posts.comments &&\n                    <S.Comments>\n                        {posts.comments.map((comment: any, index: number) => {\n                            return (\n                                <S.Comment key={index}>\n                                    {/* <S.CommentLink to={`/profile/${comment.user.username}`} style={{ fontWeight: 600 }}>{comment.userId}</S.CommentLink> {comment.text} */}\n                                    <S.CommentLink to={`/profile/${comment.user.username}`} style={{ fontWeight: 600 }}>{comment.user.username}</S.CommentLink> {comment.text}\n                                </S.Comment>\n                            )\n                        })}\n                        {commentS && commentS.length !== 0 && commentS.map((com: any, index: number) => {\n                            return (\n                                <S.Comment key={index}>\n                                    <S.CommentLink to={`/profile/${me.username}`} style={{ fontWeight: 600 }}>{me.username}</S.CommentLink> {com}\n                                </S.Comment>\n                            )\n                        }\n                        )}\n                    </S.Comments>\n                }\n                <S.Timestamp>{`${year}.${month}.${day} ${hour}:${min}`}</S.Timestamp>\n                <S.Textarea\n                    placeholder=\"Add a comment...\"\n                    value={comment}\n                    onChange={commentChange}\n                />\n            </S.Meta>\n        </S.Container>\n    )\n}\n\nexport default FeedBoxPresenter","import { gql } from \"@apollo/client\";\n\nexport const TOGGLE_LIKE = gql`\n  mutation ToggleLike($postId: Int!) {\n    ToggleLike(postId: $postId) {\n      ok\n      err\n      ret\n    }\n  }\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation AddComment($text: String!, $postId: Int!) {\n    AddComment(text: $text, postId: $postId) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_POST = gql`\n  query GetPost($postId: Int!) {\n    GetPost(postId: $postId) {\n      ok\n      err\n      post {\n        id\n        likes {\n          id\n          userId\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_LIKE = gql`\n  query GetLike($postId: Int!) {\n    GetLike(postId: $postId) {\n      ok\n      err\n      likes {\n        id\n        userId\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const UPLOAD_POST = gql`\n  mutation UploadPost($location: String, $caption: String, $images: [String]) {\n    UploadPost(location: $location, caption: $caption, images: $images) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const GET_FULL_POST = gql`\n  query GetFullPost($page: Int!) {\n    GetFullPost(page: $page) {\n      ok\n      err\n      post {\n        id\n        caption\n        location\n        isLiked\n        user {\n          id\n          username\n          profilePhoto\n        }\n        images {\n          id\n          url\n        }\n        comments {\n          id\n          text\n          user {\n            id\n            username\n          }\n          createdAt\n        }\n        likes {\n          id\n          userId\n        }\n        createdAt\n      }\n    }\n  }\n`;\n","import FeedBoxContainer from \"./FeedBoxContainer\";\nexport default FeedBoxContainer;\n","import { useLazyQuery, useMutation } from '@apollo/client'\nimport {\n    ToggleLike,\n    ToggleLikeVariables,\n    AddComment,\n    AddCommentVariables,\n    GetLike,\n    GetLikeVariables\n} from '../../types/api'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport useInput from '../../Hooks/useInput'\nimport FeedBoxPresenter from './FeedBoxPresenter'\nimport { ADD_COMMENT, GET_LIKE, TOGGLE_LIKE } from './FeedBoxQueries'\nimport { GET_FULL_POST } from '../../Routes/Home/HomeQueries'\n\ninterface IProps {\n    posts: any\n    me: any\n}\n\nconst FeedBoxContainer: React.FC<IProps> = ({ posts, me }) => {\n    const [currentItem, setCurrentItem] = useState<number>(0)\n    const [likes, setLikes] = useState<any>([])\n    const [likeCount, setLikeCount] = useState<number>(posts.likes.length)\n    const [commentS, setCommentS] = useState<any>([])\n    const [comment, commentChange, setComment] = useInput(\"\")\n    const [isLiked, setIsLiked] = useState<boolean>(likes && me && likes.userId === me.id ? true : false)\n    const [ToggleLikeMutation] = useMutation<ToggleLike,\n        ToggleLikeVariables>(TOGGLE_LIKE, {\n            variables: {\n                postId: posts.id\n            },\n            onCompleted: ({ ToggleLike }) => {\n                const { ok, err, ret } = ToggleLike;\n                if (ok && ret) {\n                    if (ret === \"DEL\") {\n                        setLikeCount(likeCount - 1);\n                    } else if (ret === \"CRA\") {\n                        setLikeCount(likeCount + 1);\n                    }\n                } else {\n                    console.log(err)\n                }\n            }\n        })\n\n    const [getPost, { loading }] = useLazyQuery<GetLike, GetLikeVariables>(GET_LIKE, {\n        onCompleted: ({ GetLike }) => {\n            const { ok, err, likes } = GetLike;\n            if (ok && likes) {\n                setLikes(likes)\n            } else {\n                console.log(err);\n            }\n        }\n    })\n\n    useEffect(() => {\n        if (posts.id) {\n            getPost({ variables: { postId: posts.id } })\n        }\n    }, [getPost, posts.id])\n\n    useEffect(() => {\n        if (likes) {\n            const idx = likes.findIndex((like: any) => {\n                return like.userId === me.id\n            })\n            if (likes[idx] !== undefined) {\n                setIsLiked(true)\n            } else {\n                setIsLiked(false)\n            }\n        }\n    }, [likes, me, setIsLiked])\n\n\n    const [AddCommentMutation] = useMutation<\n        AddComment,\n        AddCommentVariables\n    >(ADD_COMMENT, {\n        variables: {\n            text: comment,\n            postId: posts.id\n        },\n        onCompleted: ({ AddComment }) => {\n            const { ok, err } = AddComment;\n            if (ok) {\n                setCommentS([...commentS, comment])\n                setComment(\"\")\n            } else {\n                console.log(err)\n            }\n        },\n        refetchQueries: [{ query: GET_FULL_POST, variables: { page: 1 } }]\n    })\n\n    const handleToggleLike = async (e: React.MouseEvent) => {\n        e.preventDefault()\n        await ToggleLikeMutation();\n        isLiked ? setIsLiked(false) : setIsLiked(true)\n    }\n\n    const handleUserKeyPress = useCallback(event => {\n        const { keyCode } = event\n        if (keyCode === 13) {\n            AddCommentMutation();\n        }\n    }, [AddCommentMutation])\n\n    useEffect(() => {\n        if (comment !== \"\") {\n\n            document.addEventListener(\"keydown\", handleUserKeyPress)\n            return () => {\n                document.removeEventListener('keydown', handleUserKeyPress)\n            }\n        }\n    }, [comment, handleUserKeyPress])\n\n\n    if (loading || !me || !likes) {\n        return (\n            <>\n                loading...\n            </>\n        )\n    } else {\n        return (\n            <FeedBoxPresenter\n                posts={posts}\n                currentItem={currentItem}\n                setCurrentItem={setCurrentItem}\n                isLiked={isLiked}\n                setIsLiked={setIsLiked}\n                handleToggleLike={handleToggleLike}\n                likeCount={likeCount}\n                comment={comment}\n                commentChange={commentChange}\n                commentS={commentS}\n                me={me}\n            />\n        )\n    }\n}\n\nexport default FeedBoxContainer","import styled from \"styled-components\";\nimport TextareaAutosize from \"react-autosize-textarea\";\n\nexport const Wrapper = styled.div``;\n\nexport const Container = styled.div`\n  margin: 50px auto;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-width: 600px;\n`;\n\nexport const Post = styled.div`\n  width: 100%;\n  border: 1px solid #e6e6e6;\n  padding: 15px;\n  height: 120px;\n  border-radius: 4px;\n  max-width: 470px;\n  margin-bottom: 25px;\n`;\n\nexport const Textarea = styled(TextareaAutosize)`\n  border: none;\n  border-bottom: 1px solid #c7c7c7;\n  height: 70px;\n  width: 100%;\n  resize: none;\n  font-size: 14px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const UploadDiv = styled.div`\n  background-color: #fff;\n  margin: 15px;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding-right: 15px;\n`;\n\nexport const Button = styled.button`\n  width: 60px;\n  padding: 10px 0;\n  border-radius: 4px;\n  border: none;\n  background-color: #3498db;\n  color: white;\n  cursor: pointer;\n`;\n","\nimport React, { useEffect } from 'react'\nimport Header from '../../Components/Header'\nimport Loader from '../../Components/Loader'\nimport FeedBox from '../../Components/FeedBox'\nimport { useDropzone } from 'react-dropzone'\nimport { ImageUpload } from '../../Components/Icon'\nimport * as S from './HomeStyles'\n\ninterface IProps {\n    me: any\n    posts: any\n    progress: number\n    page: number\n    setPage: React.Dispatch<React.SetStateAction<number>>\n    handleUpload: (\n        e: React.ChangeEvent<HTMLInputElement>) => void\n    flag: boolean\n    caption: string\n    setCaption: (\n        e: React.ChangeEvent<HTMLTextAreaElement>) => void\n    handlePost: any\n}\n\nconst HomePresenter: React.FC<IProps> = ({\n    me,\n    posts,\n    page,\n    setPage,\n    handleUpload,\n    progress,\n    flag,\n    caption,\n    setCaption,\n    handlePost\n}) => {\n    const { getRootProps, getInputProps } = useDropzone({ accept: \"image/png, image/jpeg\" })\n\n    useEffect(() => {\n        const scrolldown = () => {\n            if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n                setPage(page + 1);\n            }\n        };\n        window.addEventListener(\"scroll\", scrolldown);\n        return () => window.removeEventListener(\"scroll\", scrolldown)\n    }, [page, setPage])\n    return (\n        <S.Wrapper>\n            <Header url={me.profilePhoto} />\n            <S.Container>\n                <S.Post>\n                    <S.Textarea\n                        placeholder=\"Add a caption\"\n                        value={caption}\n                        onChange={setCaption}\n                    />\n                    <S.Row>\n                        <S.UploadDiv {...getRootProps()}>\n                            <input {...getInputProps()} onChange={handleUpload} />\n                            {flag ? (progress !== 100 ? <Loader /> : \"\")\n                                : <ImageUpload />\n                            }\n                        </S.UploadDiv>\n                        {flag ? (progress !== 100 ? <Loader /> :\n                            <S.Button onClick={() => handlePost()}>Upload</S.Button>) :\n                            <S.Button onClick={() => handlePost()}>Upload</S.Button>}\n                    </S.Row>\n                </S.Post>\n                {posts && posts.map((post: any, index: number) => <FeedBox key={index} posts={post} me={me} />)}\n            </S.Container>\n        </S.Wrapper >\n    )\n}\n\nexport default HomePresenter","import HomeContainer from \"./HomeContainer\";\nexport default HomeContainer;\n","import { useMutation, useQuery } from '@apollo/client'\nimport React, { useEffect, useState } from 'react'\nimport { toast } from 'react-toastify'\nimport { storage } from '../../Firebase'\nimport { getAddress } from '../../Hooks/Geocoding'\nimport { ME } from '../../sharedquaries'\nimport {\n    GetFullPost,\n    GetFullPostVariables,\n    Me,\n    UploadPost,\n    UploadPostVariables\n} from '../../types/api'\nimport HomePresenter from './HomePresenter'\nimport useInput from '../../Hooks/useInput'\nimport {\n    GET_FULL_POST,\n    UPLOAD_POST\n} from './HomeQueries'\n\ninterface IProps { }\n\nconst HomeContainer: React.FC<IProps> = () => {\n    const [me, setMe] = useState<any>();\n    const [flag, setFlag] = useState<boolean>(false);\n    const [images, setImages] = useState<any>()\n    const [caption, setCaption] = useInput(\"\")\n    const [imageUrl, setImageUrl] = useState<string[]>([]);\n    const [progress, setProgress] = useState(1);\n    const [page, setPage] = useState<number>(1);\n    const [posts, setPosts] = useState<any>();\n    const [lat, setLat] = useState<number>(0)\n    const [lng, setLng] = useState<number>(0)\n    const [location, setLocation] = useState<string>(\"\")\n\n    const { loading } = useQuery<Me>(ME, {\n        onCompleted: ({ Me }) => {\n            const { ok, err, user } = Me\n            if (ok && user) {\n                setMe(user);\n            } else if (err) {\n                toast.error(err);\n            }\n        }\n    })\n    const { refetch } = useQuery<GetFullPost, GetFullPostVariables>(GET_FULL_POST, {\n        fetchPolicy: \"network-only\",\n        variables: {\n            page\n        },\n        onCompleted: ({ GetFullPost }) => {\n            const { ok, err, post } = GetFullPost;\n            if (ok && post) {\n                setPosts(post)\n            } else {\n                console.log(err)\n            }\n        }\n    })\n\n    const [UploadPostMutation] = useMutation<UploadPost, UploadPostVariables>(UPLOAD_POST, {\n        variables: {\n            caption,\n            location,\n            images: imageUrl\n        }, refetchQueries: [{ query: GET_FULL_POST, variables: { page: 1 } }],\n        onCompleted: ({ UploadPost }) => {\n            const { ok, err } = UploadPost;\n            if (ok) {\n                refetch()\n                // window.location.reload();\n            } else {\n                console.log(err);\n            }\n        }\n    })\n\n    const handleUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n        event.preventDefault()\n        if (event.target && event.target.files) {\n            if (event.target !== null && event.target.files && event.target.files.length !== null) {\n                setImages(event.target.files)\n                setFlag(true);\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (flag && me && images) {\n            for (let i = 0; i < images.length; i++) {\n                let uploadTask = storage\n                    .ref(`/${me.username}/images/${images[i].name}`)\n                    .put(images[i]);\n                uploadTask.on(\n                    \"state_changed\",\n                    (snapshot) => {\n                        const percentUploaded = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100)\n                        setProgress(percentUploaded)\n                    },\n                    (err) => { console.log(err) },\n                    () => {\n                        storage.ref(`/${me.username}/images/`)\n                            .child(`${images[i].name}`)\n                            .getDownloadURL()\n                            .then((url) => {\n                                setImageUrl(prev => [...prev, url])\n                            })\n                    }\n                )\n            }\n        }\n    }, [flag, me, images])\n\n    useEffect(() => {\n        const getLocation = () => {\n            navigator.geolocation.getCurrentPosition((pos) => {\n                if (pos && pos.coords) {\n                    setLat(pos.coords.latitude);\n                    setLng(pos.coords.longitude)\n                }\n            })\n        }\n        let getLocationInterval = setInterval(getLocation, 500);\n        return () => clearInterval(getLocationInterval)\n    }, [setLat, setLng])\n\n\n    useEffect(() => {\n        if (lat !== 0 && lng !== 0) {\n            getAddress(lat, lng, setLocation);\n        }\n    }, [lat, lng, setLocation])\n\n    const handlePost = async () => {\n        if (!imageUrl && caption === \"\") {\n            toast.error(\"You need to upload any photo and caption\")\n        } else if (imageUrl && caption) {\n            await UploadPostMutation();\n        }\n    }\n\n\n    if (loading || me === undefined) {\n        return (<>Loading...</>)\n    } else {\n        return (\n            <HomePresenter me={me}\n                posts={posts}\n                flag={flag}\n                progress={progress}\n                page={page}\n                setPage={setPage}\n                handleUpload={handleUpload}\n                caption={caption}\n                setCaption={setCaption}\n                handlePost={handlePost}\n            />\n        )\n    }\n}\n\nexport default HomeContainer","import { gql } from \"@apollo/client\";\nimport client, { isLoggedInVar } from \"./apollo\";\n\nconst query = gql`\n  query isLoggedIn {\n    isLoggedIn @client\n  }\n`;\n\nexport const userLogIn = (token: string) => {\n  client.cache.writeQuery({\n    query,\n    data: {\n      isLoggedIn: true\n    }\n  });\n  localStorage.setItem(\"Bearer\", token);\n  isLoggedInVar(true);\n};\n\nexport const userLogOut = () => {\n  client.cache.writeQuery({\n    query,\n    data: {\n      isLoggedIn: false\n    }\n  });\n  localStorage.removeItem(\"Bearer\");\n  isLoggedInVar(false);\n  window.location.href = \"/\";\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 600px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-right: 16px;\n  }\n`;\n\nexport const Link = styled.a`\n  color: #c7c7c7;\n`;\n\nexport const CopyRight = styled.span`\n  color: #c7c7c7;\n`;\n","import FooterPresenter from \"./FooterPresenter\";\nexport default FooterPresenter;\n","import React from \"react\";\nimport * as S from './FooterStyles'\n\nconst FooterPresenter = () => {\n    return (\n        <S.Container>\n            <S.CopyRight>Jinstagram {new Date().getFullYear()}&copy;</S.CopyRight>\n        </S.Container>\n    )\n};\n\nexport default FooterPresenter;\n","export default __webpack_public_path__ + \"static/media/logo.99d65aab.png\";","import styled from \"styled-components\";\n\nconst Box = styled.div`\n  border: 1px solid #e6e6e6;\n  border-radius: 4px;\n  background-color: white;\n`;\n\nexport const Wrapper = styled.div`\n  height: 90vh;\n  width: 90vw;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  max-width: 935px;\n  margin: 0 auto;\n`;\n\nexport const Container = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  /* height: 60vh; */\n  width: 350px;\n  padding-top: 25px;\n  padding-bottom: 25px;\n  margin-bottom: 40px;\n  margin-top: 150px;\n`;\n\nexport const Head = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Logo = styled.img`\n  width: 80px;\n  height: 80px;\n  object-fit: contain;\n`;\n\nexport const Title = styled.span`\n  font-size: 24px;\n  color: #999;\n  font-weight: 600;\n`;\n\nexport const Mid = styled.div`\n  padding: 12px;\n  margin-bottom: 25px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 12px;\n  width: 200px;\n  border-radius: 4px;\n  border: none;\n  background-color: #e6e6e6;\n  text-align: center;\n`;\n\nexport const Button = styled.button`\n  margin-top: 15px;\n  width: 225px;\n  padding: 10px 0;\n  border-radius: 4px;\n  border: none;\n  background-color: #3498db;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const Signup = styled.span`\n  padding-top: 15px;\n`;\n\nexport const Bot = styled.div`\n  border-top: 1px solid #c7c7c7;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 15px;\n`;\n\nexport const SocialButton = styled.button`\n  margin-top: 15px;\n  width: 215px;\n  padding: 18px 0;\n  border: none;\n  background-color: #ff3e30;\n  text-transform: uppercase;\n  font-size: 15px;\n  font-weight: 500;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const Link = styled.span`\n  cursor: pointer;\n  color: #3498db;\n`;\n\nexport const SignUpInput = styled.input`\n  padding: 12px 12px;\n  width: 200px;\n  border-radius: 4px;\n  border: none;\n  background-color: #e6e6e6;\n  text-align: center;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n","import React, { FC, ReactElement } from 'react'\nimport Footer from '../../Components/Footer'\nimport Helmet from 'react-helmet'\nimport logo from '../../Asset/logo.png'\nimport * as S from './AuthStyles'\nimport FacebookLogin from 'react-facebook-login'\nimport GoogleLogin from 'react-google-login'\n\ninterface IProps {\n    action: string\n    setAction: React.Dispatch<React.SetStateAction<string>>\n    email: string\n    emailChange: (\n        e: React.ChangeEvent<HTMLInputElement>) => void\n    onSubmit: any\n    secret: string\n    secretChange: (\n        e: React.ChangeEvent<HTMLInputElement>) => void\n    setGoogleId: React.Dispatch<React.SetStateAction<string>>\n    setFbId: React.Dispatch<React.SetStateAction<string>>\n    setProfilePhoto: React.Dispatch<React.SetStateAction<string>>\n    setSocialEmail: React.Dispatch<React.SetStateAction<string>>\n    setLastName: React.Dispatch<React.SetStateAction<string>>\n    setFirstName: React.Dispatch<React.SetStateAction<string>>\n    setUserName: (\n        e: React.ChangeEvent<HTMLInputElement>) => void\n    setIntro: (\n        e: React.ChangeEvent<HTMLInputElement>) => void\n    setSignUpFirstName: (\n        e: React.ChangeEvent<HTMLInputElement>) => void\n    setSignUpLastName: (\n        e: React.ChangeEvent<HTMLInputElement>) => void\n    username: string\n    intro: string\n    signUpFirstName: string\n    signUpLastName: string\n    FacebookLoginMutation: any\n    GoogleLoginMutatation: any\n}\n\nconst AuthHomePresenter: FC<IProps> = ({\n    action,\n    setAction,\n    secret,\n    secretChange,\n    email,\n    emailChange,\n    onSubmit,\n    setGoogleId,\n    setFbId,\n    setProfilePhoto,\n    setSocialEmail,\n    setLastName,\n    setFirstName,\n    setUserName,\n    setIntro,\n    setSignUpFirstName,\n    setSignUpLastName,\n    username,\n    intro,\n    signUpFirstName,\n    signUpLastName,\n    FacebookLoginMutation,\n    GoogleLoginMutatation\n}): ReactElement => {\n    const responseFromFacebook = (response: any): any => {\n        const { name, email, userID, picture }: any = response;\n        if (name === undefined) {\n            console.log(\"error\")\n        } else {\n            setFirstName(name.split(\" \")[0])\n            setLastName(name.split(\" \")[name.split(\" \").length - 1])\n            setSocialEmail(email)\n            setFbId(userID)\n            setProfilePhoto(picture.data.url)\n            FacebookLoginMutation();\n        }\n\n    }\n    const responseFromGoogle = (response: any): any => {\n        const { email, familyName, givenName, googleId } = response.profileObj\n        if (email === undefined) {\n            console.log(\"err\");\n        }\n        setFirstName(givenName)\n        setLastName(familyName)\n        setGoogleId(googleId)\n        setSocialEmail(email)\n        GoogleLoginMutatation();\n    }\n    return (\n        <S.Wrapper>\n            <Helmet><title>Auth | Jinstagram</title></Helmet>\n            <S.Container>\n                <S.Head>\n                    <S.Logo src={logo} alt=\"logo\" />\n                    {action === \"login\" && <S.Title>Login</S.Title>}\n                </S.Head>\n                {action === \"login\" &&\n                    <S.Mid>\n                        <S.Form onSubmit={onSubmit}>\n                            <S.Input\n                                placeholder=\"Email\"\n                                value={email}\n                                onChange={emailChange}\n                                autoFocus={true}\n                            />\n                            <S.Button>Login</S.Button>\n                        </S.Form>\n                        <S.Signup>Don't have an account? </S.Signup>\n                        <S.Link onClick={() => setAction(\"signup\")}>Sign Up</S.Link>\n                    </S.Mid>\n                }\n                {action === \"signup\" && (\n                    <S.Mid>\n                        <S.Form onSubmit={onSubmit}>\n                            <S.SignUpInput\n                                placeholder=\"Email\"\n                                value={email}\n                                onChange={emailChange}\n                                autoFocus={true}\n                            />\n                            <S.SignUpInput\n                                placeholder=\"First Name\"\n                                value={signUpFirstName}\n                                onChange={setSignUpFirstName}\n                                autoFocus={true}\n                            />\n                            <S.SignUpInput\n                                placeholder=\"Last Name\"\n                                value={signUpLastName}\n                                onChange={setSignUpLastName}\n                                autoFocus={true}\n                            />\n                            <S.SignUpInput\n                                placeholder=\"Username\"\n                                value={username}\n                                onChange={setUserName}\n                                autoFocus={true}\n                            />\n                            <S.SignUpInput\n                                placeholder=\"intro\"\n                                value={intro}\n                                onChange={setIntro}\n                                autoFocus={true}\n                            />\n                            <S.Button>Confirm</S.Button>\n                        </S.Form>\n                    </S.Mid>\n                )}\n                {action === \"confirm\" && (\n                    <S.Mid>\n                        <S.Form onSubmit={onSubmit}>\n                            <S.SignUpInput\n                                placeholder=\"code\"\n                                value={secret}\n                                onChange={secretChange}\n                                autoFocus={true}\n                            />\n                            <S.Button>Confirm</S.Button>\n                        </S.Form>\n                    </S.Mid>\n                )}\n                <S.Bot>\n                    <FacebookLogin\n                        appId=\"306360554149080\"\n                        fields=\"name, email,picture\"\n                        callback={responseFromFacebook}\n                    />\n                    <GoogleLogin\n                        render={renderProps => (\n                            <S.SocialButton onClick={renderProps.onClick} disabled={renderProps.disabled}>login with Google</S.SocialButton>\n                        )}\n                        clientId=\"653597209706-g73v027q056idqi93oetg0bp8k1s3vtd.apps.googleusercontent.com\"\n                        onSuccess={responseFromGoogle}\n                        onFailure={responseFromGoogle}\n                        cookiePolicy={\"single_host_origin\"}\n                    />\n                </S.Bot>\n            </S.Container>\n            <Footer />\n        </S.Wrapper>\n    )\n}\n\nexport default AuthHomePresenter","import { gql } from \"@apollo/client\";\n\nexport const FACEBOOK_CONNECT = gql`\n  mutation FacebookConnect(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $fbId: String!\n    $profilePhoto: String\n  ) {\n    FacebookConnect(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      fbId: $fbId\n      profilePhoto: $profilePhoto\n    ) {\n      ok\n      err\n      token\n    }\n  }\n`;\n\nexport const GOOGLE_CONNECT = gql`\n  mutation GoogleConnect(\n    $googleId: String!\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n  ) {\n    GoogleConnect(\n      googleId: $googleId\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n    ) {\n      ok\n      err\n      token\n    }\n  }\n`;\n\nexport const CREATE_ACCOUNT = gql`\n  mutation CreateAccount(\n    $username: String!\n    $email: String!\n    $firstName: String!\n    $lastName: String!\n    $intro: String!\n  ) {\n    CreateAccount(\n      username: $username\n      email: $email\n      firstName: $firstName\n      lastName: $lastName\n      intro: $intro\n    ) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const REQUEST_CODE = gql`\n  mutation RequestCode($email: String!) {\n    RequestCode(email: $email) {\n      ok\n      err\n      code\n    }\n  }\n`;\n\nexport const CONFIRM_SECRET = gql`\n  mutation ConfirmSecret($email: String!, $code: String!) {\n    ConfirmSecret(email: $email, code: $code){\n      ok\n      err\n      token\n    }\n  }\n`;\n","import AuthHomeContainer from \"./AuthHomeContainer\";\nexport default AuthHomeContainer;\n","\nimport { useMutation } from '@apollo/client'\nimport React, { useState } from 'react'\nimport { toast } from 'react-toastify'\nimport { userLogIn } from '../../Apollo/authResolvers'\nimport useInput from '../../Hooks/useInput'\nimport { ConfirmSecret, ConfirmSecretVariables, CreateAccount, CreateAccountVariables, FacebookConnect, FacebookConnectVariables, GoogleConnect, GoogleConnectVariables, RequestCode, RequestCodeVariables } from '../../types/api'\nimport AuthHomePresenter from './AuthHomePresenter'\nimport { CONFIRM_SECRET, CREATE_ACCOUNT, FACEBOOK_CONNECT, GOOGLE_CONNECT, REQUEST_CODE } from './AuthHomeQueries'\n\nconst AuthHomeContainer = () => {\n    const [email, emailChange] = useInput(\"\")\n    const [secret, secretChange] = useInput(\"\")\n    const [username, setUserName] = useInput(\"\")\n    const [intro, setIntro] = useInput(\"\")\n    const [signUpFirstName, setSignUpFirstName] = useInput(\"\")\n    const [signUpLastName, setSignUpLastName] = useInput(\"\")\n    const [action, setAction] = useState<any>(\"login\")\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [socialEmail, setSocialEmail] = useState(\"\")\n    const [profilePhoto, setProfilePhoto] = useState(\"\")\n    const [fbId, setFbId] = useState(\"\")\n    const [googleId, setGoogleId] = useState(\"\")\n    const [FacebookLoginMutation] = useMutation<FacebookConnect,\n        FacebookConnectVariables>(FACEBOOK_CONNECT, {\n            variables: {\n                firstName,\n                lastName,\n                email: socialEmail,\n                fbId,\n                profilePhoto\n            },\n            onCompleted: ({ FacebookConnect: result }) => {\n                const { ok, err, token } = result\n                if (ok) {\n                    if (token) {\n                        userLogIn(token)\n                    }\n                } else {\n                    console.log(err)\n                }\n            }\n        })\n\n    const [GoogleLoginMutatation] = useMutation<GoogleConnect,\n        GoogleConnectVariables>(\n            GOOGLE_CONNECT, {\n            variables: {\n                firstName,\n                lastName,\n                email: socialEmail,\n                googleId\n            },\n            onCompleted: ({ GoogleConnect: result }) => {\n                const { ok, err, token } = result;\n                if (ok) {\n                    if (token) {\n                        userLogIn(token)\n                        toast.success(\"Connected\")\n                    }\n                } else {\n                    console.log(err)\n                }\n            }\n        }\n        )\n\n    const [CreateAccountMutation] = useMutation<CreateAccount,\n        CreateAccountVariables>(\n            CREATE_ACCOUNT, {\n            variables: {\n                firstName: signUpFirstName,\n                lastName: signUpLastName,\n                email,\n                intro,\n                username\n            }, onCompleted: ({ CreateAccount }) => {\n                const { ok, err } = CreateAccount;\n                if (ok) {\n                    toast.success(\"Account created!, now login\")\n                    setTimeout(() => setAction(\"login\"), 2000)\n                } else if (err) {\n                    toast.error(err)\n                }\n            }\n        })\n\n    const [RequestCodeMutation] = useMutation<RequestCode, RequestCodeVariables>(\n        REQUEST_CODE, {\n        variables: {\n            email\n        }, onCompleted: ({ RequestCode }) => {\n            const { ok, err } = RequestCode;\n            if (ok) {\n                toast.success(\"Secret code sent to your email\");\n                setTimeout(() => setAction(\"confirm\"), 500);\n            } else if (err) {\n                toast.error(err)\n            }\n        }\n    }\n    )\n    const [ConfirmSecretMutation] = useMutation<ConfirmSecret, ConfirmSecretVariables>(\n        CONFIRM_SECRET, {\n        variables: {\n            email,\n            code: secret\n        }, onCompleted: ({ ConfirmSecret }) => {\n            const { ok, err, token } = ConfirmSecret;\n            if (ok && token) {\n                userLogIn(token)\n            } else {\n                toast.error(err)\n            }\n        }\n    }\n    )\n\n\n    const onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n        e.preventDefault();\n        if (action === \"login\") {\n            if (email !== \"\") {\n                try {\n                    const { data } = await RequestCodeMutation();\n                    if (!data?.RequestCode) {\n                        toast.error(\"You don't have an account yet. Sign up now\");\n                        setTimeout(() => setAction(\"signup\"), 2000)\n                    } else {\n                        setAction(\"confirm\")\n                    }\n                } catch {\n                    toast.error(\"Requesting code is failed.\")\n                }\n            } else {\n                toast.error(\"Email is required\")\n            }\n        } else if (action === \"signup\") {\n            if (signUpFirstName !== \"\"\n                && signUpLastName !== \"\"\n                && username !== \"\"\n                && email !== \"\"\n                && intro !== \"\") {\n                try {\n                    const { data } = await CreateAccountMutation();\n                    if (!data?.CreateAccount) {\n                        toast.error(\"Can't create an account\")\n                    } else {\n                        setTimeout(() => setAction(\"login\"))\n                    }\n                } catch (err) {\n                    toast.error(err.message)\n                }\n            } else {\n                toast.error(\"all fields are required\")\n            }\n        } else if (action === \"confirm\") {\n            if (secret !== \"\") {\n                try {\n                    await ConfirmSecretMutation();\n                } catch (err) {\n                    toast.error(err)\n                }\n            }\n        }\n    }\n\n    return (\n        <AuthHomePresenter\n            action={action}\n            setAction={setAction}\n            email={email}\n            emailChange={emailChange}\n            onSubmit={onSubmit}\n            secret={secret}\n            secretChange={secretChange}\n            setGoogleId={setGoogleId}\n            setFbId={setFbId}\n            setProfilePhoto={setProfilePhoto}\n            setSocialEmail={setSocialEmail}\n            setLastName={setLastName}\n            setFirstName={setFirstName}\n            setUserName={setUserName}\n            setIntro={setIntro}\n            setSignUpFirstName={setSignUpFirstName}\n            setSignUpLastName={setSignUpLastName}\n            FacebookLoginMutation={FacebookLoginMutation}\n            GoogleLoginMutatation={GoogleLoginMutatation}\n            username={username}\n            intro={intro}\n            signUpFirstName={signUpFirstName}\n            signUpLastName={signUpLastName}\n        />\n    )\n}\n\nexport default AuthHomeContainer","import styled from \"styled-components\";\n\ninterface IProps {\n  bg?: string;\n}\n\nexport const Wrapper = styled.div``;\n\nexport const Container = styled.div`\n  width: 100%;\n  min-width: 500px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin: 0 auto;\n  min-height: 50vh;\n  padding-top: 100px;\n`;\n\nexport const UserDetail = styled.div`\n  width: 60%;\n  min-width: 450px;\n  display: flex;\n  flex-direction: column;\n  padding-left: 25px;\n  padding-right: 25px;\n  min-height: 200px;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nexport const UserDetailCol = styled.div`\n  width: 50%;\n`;\n\nexport const UserDetailRow = styled.div`\n  margin-bottom: 8px;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  width: 180px;\n`;\n\nexport const FollowRow = styled.div`\n  margin-bottom: 8px;\n  display: flex;\n  flex-direction: row;\n  padding: 10px 0;\n  justify-content: center;\n  width: 180px;\n`;\n\nexport const FollowCol = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FollowTitle = styled.span`\n  font-weight: 600;\n  font-size: 16px;\n`;\n\nexport const FollowCount = styled.span`\n  font-size: 14px;\n`;\n\nexport const Intro = styled.p`\n  margin-left: 45px;\n`;\n\nexport const LogoutButton = styled.div`\n  width: 180px;\n  padding: 8px 0;\n  border-radius: 4px;\n  border: none;\n  background-color: #e74c3c;\n  color: white;\n  cursor: pointer;\n  text-align: center;\n  font-size: 14px;\n  &:hover {\n    background-color: #c0392b;\n  }\n`;\n\nexport const Profile = styled.img`\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n  border-radius: 10rem;\n`;\n\nexport const Button = styled.button`\n  background-color: white;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const Username = styled.span`\n  font-weight: 600;\n  font-size: 24px;\n  margin-right: 15px;\n`;\n\nexport const FollowingButton = styled.button`\n  width: 180px;\n  padding: 10px 0;\n  border-radius: 4px;\n  border: none;\n  background-color: #3498db;\n  color: white;\n  cursor: pointer;\n  &:hover {\n    background-color: #2980b9;\n  }\n`;\n\nexport const UserPosts = styled.div`\n  width: 80%;\n  border-top: 3px solid #333;\n  padding-top: 50px;\n  display: grid;\n  grid-template-columns: repeat(3, 250px);\n  grid-template-rows: 250px;\n  grid-auto-rows: 250px;\n  justify-content: center;\n  margin-bottom: 50px;\n`;\n\nexport const PostOverlay = styled.div`\n  background-color: rgba(0, 0, 0, 0.6);\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n  transition: opacity 0.3s linear;\n  svg {\n    fill: white;\n  }\n`;\n\nexport const PostContainer = styled.div<IProps>`\n  background-image: url(${(props) => props.bg});\n  background-size: cover;\n  margin: 3px;\n  height: 250px;\n  width: 250px;\n  cursor: pointer;\n  &:hover {\n    ${PostOverlay} {\n      opacity: 1;\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const EDIT_USER = gql`\n  mutation EditUser(\n    $profilePhoto: String\n    $intro: String\n    $username: String\n    $firstName: String\n    $lastName: String\n  ) {\n    EditUser(\n      profilePhoto: $profilePhoto\n      intro: $intro\n      username: $username\n      firstName: $firstName\n      lastName: $lastName\n    ) {\n      ok\n      err\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background-color: white;\n  position: absolute;\n  margin: auto;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 50%;\n  height: 60%;\n  z-index: 5;\n  padding: 50px 20px;\n  padding-top: 10px;\n  border-radius: 5px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n`;\n\nexport const Headbar = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-bottom: 40px;\n`;\n\nexport const ExitButton = styled.button`\n  border: none;\n  padding: 4px 6px;\n  &:hover {\n    background-color: lightgray;\n  }\n`;\n\nexport const PopupBody = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.span`\n  width: 100px;\n  font-weight: 600;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 12px;\n  width: 300px;\n  border-radius: 4px;\n  border: none;\n  background-color: #e6e6e6;\n`;\n\nexport const PopUpBottom = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Button = styled.div`\n  margin-top: 15px;\n  width: 100px;\n  padding: 10px 0;\n  border-radius: 4px;\n  border: none;\n  background-color: #3498db;\n  color: white;\n  text-align: center;\n  align-items: center;\n  cursor: pointer;\n  &:hover {\n    background-color: #2980b9;\n    transition: 0.2s linear;\n  }\n`;\n\nexport const UploadDiv = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  border: 3px solid #eee;\n  border-radius: 4px;\n  height: 100px;\n  text-align: center;\n  margin-bottom: 25px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`;\n","import PopUpPresenter from \"./PopUpPresenter\";\nexport default PopUpPresenter;\n","import { useMutation } from '@apollo/client';\nimport React, { useEffect, useState } from 'react';\nimport { EditUser, EditUserVariables } from '../../types/api'\nimport { useDropzone } from 'react-dropzone';\nimport { storage } from '../../Firebase';\nimport useInput from '../../Hooks/useInput';\nimport { ImageUpload } from '../Icon';\nimport { EDIT_USER } from './PopUpQueries';\nimport * as S from './PopUpStyles'\nimport Loader from '../Loader';\nimport { toast } from 'react-toastify';\n\n\ninterface IProps {\n    setPopup: React.Dispatch<React.SetStateAction<boolean>>\n    me: any\n    refetch: any\n}\n\nconst PopUpPresenter: React.FC<IProps> = ({ setPopup, me, refetch }) => {\n    const [image, setImage] = useState<any>();\n    const [flag, setFlag] = useState<boolean>(false);\n    const [progress, setProgress] = useState<number>(0)\n    const [firstName, firstNameChange] = useInput(\"\");\n    const [lastName, lastNameChange] = useInput(\"\");\n    const [intro, introChange] = useInput(\"\");\n    const [imageUrl, setImageUrl] = useState<string>('')\n\n    const { getRootProps, getInputProps } = useDropzone({ accept: \"image/png, image/jpeg\" });\n\n    const [EditUserMutation] = useMutation<EditUser, EditUserVariables>(EDIT_USER, {\n        variables: {\n            firstName,\n            lastName,\n            intro,\n            profilePhoto: imageUrl\n        },\n        onCompleted: ({ EditUser }) => {\n            const { ok, err } = EditUser\n            if (ok) {\n                toast.success(\"User Data edited\")\n                setPopup(false);\n                refetch();\n                // window.location.reload();\n            } else {\n                console.log(err)\n            }\n        }\n    })\n\n\n    const handleUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n        event.preventDefault();\n        if (event.target && event.target.files) {\n            if (event.target !== null && event.target.files && event.target.files.length !== null) {\n                setImage(event.target.files[0]);\n                setFlag(true)\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (flag && me && image) {\n            let uplaodTask = storage.ref(`/${me.username}/profile/${image.name}`).put(image);\n            uplaodTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const percentUpload = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n                    setProgress(percentUpload)\n                },\n                (err) => console.log(err),\n                () => {\n                    storage.ref(`/${me.username}/profile/`).child(`${image.name}`).getDownloadURL().then((url) => setImageUrl(url))\n                }\n            )\n        }\n    }, [flag, me, image])\n\n    return (\n        <S.Container>\n            <S.Headbar>\n                <S.ExitButton onClick={() => setPopup(false)}>X</S.ExitButton>\n            </S.Headbar>\n            <S.PopupBody>\n                {progress === 0 ?\n                    <S.UploadDiv {...getRootProps()}>\n                        <input {...getInputProps()} onChange={handleUpload} />\n                        <ImageUpload />\n                    Click here or drag image to upload\n                </S.UploadDiv> : progress === 100 ? \"Uploaded\" : <Loader />}\n\n                <S.Row>\n                    <S.Title>First Name</S.Title>\n                    <S.Input\n                        type=\"text\"\n                        placeholder=\"First Name\"\n                        value={firstName}\n                        onChange={firstNameChange}\n                    />\n                </S.Row>\n                <S.Row>\n                    <S.Title>Last Name</S.Title>\n                    <S.Input\n                        type=\"text\"\n                        placeholder=\"Last Name\"\n                        value={lastName}\n                        onChange={lastNameChange}\n                    />\n                </S.Row>\n                <S.Row>\n                    <S.Title>Intro</S.Title>\n                    <S.Input\n                        type=\"text\"\n                        placeholder=\"Intro\"\n                        value={intro}\n                        onChange={introChange}\n                    />\n                </S.Row>\n            </S.PopupBody>\n            <S.PopUpBottom>\n                <S.Button onClick={() => EditUserMutation()}>Submit</S.Button>\n            </S.PopUpBottom>\n        </S.Container>\n    )\n}\n\nexport default PopUpPresenter;","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background-color: white;\n  position: absolute;\n  margin: auto;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 50%;\n  height: 60%;\n  z-index: 5;\n  padding: 50px 20px;\n  padding-top: 10px;\n  border-radius: 5px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n`;\n\nexport const Headbar = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nexport const ExitButton = styled.button`\n  border: none;\n  padding: 4px 6px;\n  height: 22px;\n  width: 22px;\n  cursor: pointer;\n  &:hover {\n    background-color: lightgray;\n  }\n`;\n\nexport const TitleDiv = styled.div`\n  text-align: center;\n`;\n\nexport const Title = styled.h2``;\n\nexport const PopupBody = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Row = styled.div`\n  padding: 8px 0;\n  padding-left: 15px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin-bottom: 5px;\n  &:hover {\n    background-color: #eee;\n    transition: 0.2s linear;\n  }\n`;\n\nexport const Input = styled.input`\n  padding: 12px 12px;\n  width: 300px;\n  border-radius: 4px;\n  border: none;\n  background-color: #e6e6e6;\n`;\n\nexport const PopUpBottom = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Button = styled.div`\n  margin-top: 15px;\n  width: 100px;\n  padding: 10px 0;\n  border-radius: 4px;\n  border: none;\n  background-color: #3498db;\n  color: white;\n  text-align: center;\n  align-items: center;\n  cursor: pointer;\n  &:hover {\n    background-color: #2980b9;\n    transition: 0.2s linear;\n  }\n`;\n\nexport const UploadDiv = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  border: 3px solid #eee;\n  border-radius: 4px;\n  height: 100px;\n  text-align: center;\n  margin-bottom: 25px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const ProfileImage = styled.img`\n  width: 50px;\n  height: 50px;\n  object-fit: cover;\n  border-radius: 10rem;\n`;\n\nexport const SmallRow = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const RowUsername = styled.span`\n  padding-left: 30px;\n  font-weight: 600;\n  color: black;\n`;\n\nexport const RowMessage = styled.span`\n  padding-left: 35px;\n  color: #ccc;\n`;\n\nexport const ExtendedLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const ChatRow = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 15px;\n    border-bottom: 2px solid #ccc;\n  }\n`;\n\nexport const ChatInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 50px;\n  font-size: 20px;\n`;\n","import ChatPopupPresenter from \"./ChatPopupPresenter\";\nexport default ChatPopupPresenter;\n","import React, { useEffect } from 'react';\nimport * as S from './ChatPopupStyles'\n\ninterface IProps {\n    setPopup: React.Dispatch<React.SetStateAction<boolean>>\n    me: any\n}\n\nconst ChatPopupPresenter: React.FC<IProps> = ({ setPopup, me }) => {\n    useEffect(() => {\n        const clicked = () => {\n            setPopup(false)\n        }\n        document.addEventListener(\"click\", clicked);\n        return () => document.removeEventListener(\"click\", clicked)\n    }, [setPopup])\n    if (!me) {\n        return (\n            <>\n                loading\n            </>\n        )\n    }\n    else {\n        return (\n            <S.Container>\n                <S.Headbar>\n                    <S.TitleDiv>\n                    </S.TitleDiv>\n                    <S.Title>Chat List</S.Title>\n                    <S.ExitButton onClick={() => setPopup(false)}>X</S.ExitButton>\n                </S.Headbar>\n                <S.PopupBody>\n                    <S.ChatRow>\n                        {me.chatFrom && me.chatFrom.length === 0 ? <S.ChatInfo>You haven't received any message yet</S.ChatInfo>\n                            : me.chatFrom && me.chatFrom.map((chat: any, index: number) => {\n                                return (\n                                    <S.ExtendedLink key={index} to={`/chat/${chat.id}`}>\n                                        <S.Row>\n                                            <S.ProfileImage src={chat.to.profilePhoto} alt={\"to\"} />\n                                            <S.SmallRow>\n                                                <S.RowUsername>To : {chat.to.username}</S.RowUsername>\n                                                {chat.messages && chat.messages.length !== 0 ?\n                                                    <S.RowMessage>{chat.messages[chat.messages.length - 1].user.username} : {chat.messages[chat.messages.length - 1].text}</S.RowMessage> :\n                                                    <S.RowMessage>No message</S.RowMessage>\n                                                }\n                                            </S.SmallRow>\n                                        </S.Row>\n                                    </S.ExtendedLink>\n                                )\n                            })}\n                    </S.ChatRow>\n                    <S.ChatRow>\n                        {me.chatTo && me.chatTo.length === 0 ? <S.ChatInfo>You haven't sent any message yet</S.ChatInfo>\n                            : me.chatTo && me.chatTo.map((chat: any, index: number) => {\n                                return (\n                                    <S.ExtendedLink key={index} to={`/chat/${chat.id}`}>\n                                        <S.Row>\n                                            <S.ProfileImage src={chat.from.profilePhoto} alt={\"to\"} />\n                                            <S.SmallRow>\n                                                <S.RowUsername>From : {chat.from.username}</S.RowUsername>\n                                                {chat.messages && chat.messages.length !== 0 ?\n                                                    <S.RowMessage>{chat.messages[chat.messages.length - 1].user.username} : {chat.messages[chat.messages.length - 1].text}</S.RowMessage> :\n                                                    <S.RowMessage>No message</S.RowMessage>\n                                                }\n                                            </S.SmallRow>\n                                        </S.Row>\n                                    </S.ExtendedLink>\n                                )\n                            })}\n                    </S.ChatRow>\n                </S.PopupBody>\n            </S.Container>\n        )\n    }\n}\n\nexport default ChatPopupPresenter","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background-color: white;\n  position: absolute;\n  margin: auto;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 50%;\n  height: 60%;\n  z-index: 5;\n  padding: 50px 20px;\n  padding-top: 10px;\n  border-radius: 5px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n`;\n\nexport const Headbar = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nexport const ExitButton = styled.button`\n  border: none;\n  padding: 4px 6px;\n  height: 22px;\n  width: 22px;\n  cursor: pointer;\n  &:hover {\n    background-color: lightgray;\n  }\n`;\n\nexport const TitleDiv = styled.div`\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n`;\n\nexport const PopupBody = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Row = styled.div`\n  width: 100%;\n  padding: 8px 0;\n  padding-left: 15px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin-bottom: 5px;\n  &:hover {\n    background-color: #eee;\n    transition: 0.2s linear;\n  }\n`;\n\nexport const ProfileImage = styled.img`\n  width: 50px;\n  height: 50px;\n  object-fit: cover;\n  border-radius: 10rem;\n`;\n\nexport const RowUsername = styled.span`\n  padding-left: 30px;\n  font-weight: 600;\n  color: black;\n`;\n\nexport const ExtendedLink = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  cursor: pointer;\n`;\n","import FollowPopupPresenter from \"./FollowPopupPresenter\";\nexport default FollowPopupPresenter;\n","import React, { useEffect } from 'react';\nimport * as S from './FollowPopupStyles'\n\ninterface IProps {\n    setFollowPopup: React.Dispatch<React.SetStateAction<boolean>>\n    user: any\n    action: string\n}\n\nconst FollowPopupPresenter: React.FC<IProps> = ({ setFollowPopup, user, action }) => {\n    useEffect(() => {\n        const clicked = () => {\n            setFollowPopup(false)\n        }\n        document.addEventListener(\"click\", clicked);\n        return () => document.removeEventListener(\"click\", clicked)\n    }, [setFollowPopup])\n    return (\n        <S.Container>\n            <S.Headbar>\n                <S.TitleDiv>\n                </S.TitleDiv>\n                <S.Title>{action} List</S.Title>\n                <S.ExitButton onClick={() => setFollowPopup(false)}>X</S.ExitButton>\n            </S.Headbar>\n            <S.PopupBody>\n                {action === \"follower\" && (\n                    user.followers && user.followers.map((user: any, index: number) => {\n                        return (\n                            <S.ExtendedLink key={index} to={`/profile/${user.username}`}>\n                                <S.Row>\n                                    <S.ProfileImage src={user.profilePhoto} alt={\"user\"} />\n                                    <S.RowUsername>{user.username}</S.RowUsername>\n                                </S.Row>\n                            </S.ExtendedLink>\n                        )\n                    })\n                )}\n            </S.PopupBody>\n        </S.Container>\n    )\n}\n\nexport default FollowPopupPresenter","import React from 'react'\nimport * as S from './ProfileStyles'\nimport Header from '../../Components/Header'\nimport { HeartFull, Message } from '../../Components/Icon'\nimport PopUp from '../../Components/PopUp'\nimport { userLogOut } from '../../Apollo/authResolvers'\nimport ChatPopup from '../../Components/ChatPopup'\nimport FollowPopup from '../../Components/FollowPopup'\n\ninterface IProps {\n    me: any\n    refetch: any\n    user: any\n    FollowingHandler: (username: string) => void\n    followingS: boolean | null | undefined\n    isMe: boolean\n    popup: boolean\n    setPopup: React.Dispatch<React.SetStateAction<boolean>>\n    followPopup: boolean\n    setFollowPopup: React.Dispatch<React.SetStateAction<boolean>>\n    chatPopup: boolean\n    setChatPopup: React.Dispatch<React.SetStateAction<boolean>>\n    ChatHandler: any\n    action: string\n    setAction: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst ProfilePresenter: React.FC<IProps> = ({\n    me,\n    refetch,\n    user,\n    FollowingHandler,\n    followingS,\n    isMe,\n    popup,\n    setPopup,\n    followPopup,\n    setFollowPopup,\n    chatPopup,\n    setChatPopup,\n    ChatHandler,\n    action,\n    setAction\n}) => {\n    const handleFollowPopup = (action: string) => {\n        setAction(action)\n        setFollowPopup(true);\n    }\n    console.log(me)\n    return (\n        <S.Wrapper>\n            <Header url={me.profilePhoto} />\n            <S.Container>\n                <S.UserDetail>\n                    <S.Row>\n                        <S.UserDetailCol>\n                            <S.Profile src={user.profilePhoto} alt={\"ProfilePhoto\"} />\n                        </S.UserDetailCol>\n                        <S.UserDetailCol>\n                            <S.UserDetailRow>\n                                <S.Username>{user.username}</S.Username>\n                                {isMe ?\n                                    <>\n                                        <S.Button onClick={() => setChatPopup(true)}>\n                                            <Message />\n                                        </S.Button>\n                                        {chatPopup ? <ChatPopup setPopup={setChatPopup} me={me} /> : \"\"}\n                                    </>\n                                    :\n                                    <S.Button onClick={ChatHandler}>\n                                        <Message />\n                                    </S.Button>\n                                }\n                            </S.UserDetailRow>\n                            <S.UserDetailRow>\n                                {user.firstName} {user.lastName}\n                            </S.UserDetailRow>\n                            <S.UserDetailRow>\n                                {user.email}\n                            </S.UserDetailRow>\n                            <S.FollowRow>\n                                <S.Button onClick={() => handleFollowPopup(\"follower\")}>\n                                    <S.FollowCol>\n                                        <S.FollowTitle>\n                                            Follower\n                                    </S.FollowTitle>\n                                        <S.FollowCount>\n                                            {user.followers ? user.followers.length : \"0\"}\n                                        </S.FollowCount>\n                                    </S.FollowCol>\n                                </S.Button>\n                                {action !== \"\" && followPopup && <FollowPopup setFollowPopup={setFollowPopup} user={user} action={action} />}\n                            </S.FollowRow>\n                            <S.UserDetailRow>\n                                {isMe ? <S.FollowingButton onClick={() => setPopup(true)}>Setting</S.FollowingButton>\n                                    :\n                                    <S.FollowingButton onClick={() => FollowingHandler(user.username)}>{followingS ? \"UNFOLLOW\" : \"FOLLOW\"}</S.FollowingButton>\n                                }\n                                {popup && <PopUp setPopup={setPopup} me={me} refetch={refetch} />}\n                            </S.UserDetailRow>\n                        </S.UserDetailCol>\n                    </S.Row>\n                    <S.Row>\n                        <S.UserDetailCol>\n                            <S.Intro>{user.intro}</S.Intro>\n                        </S.UserDetailCol>\n                        {isMe ?\n                            <S.UserDetailCol><S.LogoutButton onClick={() => userLogOut()}>Logout</S.LogoutButton></S.UserDetailCol>\n                            :\n                            <S.UserDetailCol> </S.UserDetailCol>\n                        }\n                    </S.Row>\n                </S.UserDetail>\n                <S.UserPosts>\n                    {user.posts && user.posts.length === 0 && \"You have no post\"}\n                    {user.posts && user.posts.map((post: any, index: number) => {\n                        return (\n                            <S.PostContainer key={index} bg={post.images[0].url}>\n                                <S.PostOverlay>\n                                    <HeartFull />\n                                </S.PostOverlay>\n                            </S.PostContainer>\n                        )\n                    })}\n                </S.UserPosts>\n            </S.Container>\n        </S.Wrapper>\n    )\n}\n\nexport default ProfilePresenter","import { gql } from \"@apollo/client\";\n\nexport const TOGGLE_FOLLOWING = gql`\n  mutation ToggleFollowing($username: String!, $action: String!) {\n    ToggleFollowing(username: $username, action: $action) {\n      ok\n      err\n    }\n  }\n`;\n\nexport const CREATE_CHAT = gql`\n  mutation CreateChat($toId: Int!) {\n    CreateChat(toId: $toId) {\n      ok\n      err\n      chat {\n        id\n      }\n    }\n  }\n`;\n","import ProfileContainer from \"./ProfileContainer\";\nexport default ProfileContainer;\n","import { createBrowserHistory } from 'history'\nimport { useMutation, useQuery } from '@apollo/client'\nimport React, { useEffect, useState } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { ME, SEE_USER } from '../../sharedquaries'\nimport {\n    Me,\n    SeeUser,\n    SeeUserVariables,\n    ToggleFollowing,\n    ToggleFollowingVariables,\n    CreateChat,\n    CreateChatVariables\n} from '../../types/api'\nimport ProfilePresenter from './ProfilePresenter'\nimport { CREATE_CHAT, TOGGLE_FOLLOWING } from './ProfileQueries'\n\ninterface IRouteParam {\n    username: string\n}\ninterface IProps extends RouteComponentProps<IRouteParam> {\n}\n\nconst ProfileContainer: React.FC<IProps> = ({ match: { params } }) => {\n    const { username } = params;\n    const [isMe, setIsMe] = useState<boolean>(false)\n    const [me, setMe] = useState<any>()\n    const [user, setUser] = useState<any>()\n    const [followingS, setFollowingS] = useState<boolean | null | undefined>();\n    const [popup, setPopup] = useState<boolean>(false)\n    const [followPopup, setFollowPopup] = useState<boolean>(false)\n    const [action, setAction] = useState<string>(\"\")\n    const [chatPopup, setChatPopup] = useState<boolean>(false);\n    useQuery<Me>(ME, {\n        onCompleted: ({ Me }) => {\n            const { ok, err, user } = Me;\n            if (ok && user) {\n                setMe(user);\n            } else {\n                console.log(err);\n            }\n        }\n    })\n    const { loading, refetch } = useQuery<SeeUser, SeeUserVariables>(SEE_USER, {\n        variables: {\n            username\n        },\n        onCompleted: ({ SeeUser }) => {\n            const { ok, err, user } = SeeUser;\n            if (ok && user) {\n                setUser(user);\n                setFollowingS(user.isFollowing);\n            } else {\n                console.log(err);\n            }\n        }\n    })\n\n    const forceHistory = createBrowserHistory({ forceRefresh: true })\n\n    const [ToggleFollowingMutation] = useMutation<ToggleFollowing,\n        ToggleFollowingVariables>(TOGGLE_FOLLOWING, {\n            onCompleted: ({ ToggleFollowing }) => {\n                const { ok, err } = ToggleFollowing;\n                if (ok) {\n                    setFollowingS(followingS ? false : true)\n                    refetch();\n                    // window.location.reload()\n                } else {\n                    console.log(err);\n                }\n            }\n        })\n\n    const [CreateChatMutation] = useMutation<CreateChat, CreateChatVariables>(CREATE_CHAT, {\n        onCompleted: ({ CreateChat }) => {\n            const { ok, err, chat } = CreateChat;\n            if (ok) {\n                if (chat) {\n                    forceHistory.push(`/chat/${chat.id}`)\n                }\n            } else {\n                console.log(err)\n            }\n        }\n    })\n\n    const FollowingHandler = (username: string) => {\n        ToggleFollowingMutation({\n            variables: {\n                username,\n                action: followingS ? \"UNFOLLOW\" : \"FOLLOW\"\n            },\n        })\n    }\n\n    const ChatHandler = async () => {\n        await CreateChatMutation({\n            variables: {\n                toId: user.id\n            }\n        })\n    }\n\n    useEffect(() => {\n        if (me && user) {\n            if (me.id === user.id) {\n                setIsMe(true);\n            } else {\n                setIsMe(false);\n            }\n        }\n    }, [me, user, setIsMe])\n\n    if (loading || !user || !me) {\n        return (\n            <>\n                loading...\n            </>\n        )\n    }\n\n    return (\n        <ProfilePresenter\n            me={me}\n            refetch={refetch}\n            user={user}\n            FollowingHandler={FollowingHandler}\n            followingS={followingS}\n            isMe={isMe}\n            popup={popup}\n            setPopup={setPopup}\n            followPopup={followPopup}\n            setFollowPopup={setFollowPopup}\n            chatPopup={chatPopup}\n            setChatPopup={setChatPopup}\n            ChatHandler={ChatHandler}\n            action={action}\n            setAction={setAction}\n        />\n    )\n}\n\nexport default ProfileContainer;","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  text: string\n  mine: boolean\n}\n\n\ninterface IStyle {\n  mine: boolean\n}\n\nconst Message = styled.div<IStyle>`\n  background-color: ${(props) =>\n    props.mine ? props.theme.blueColor : props.theme.greyColor};\n  color: white;\n  padding: 10px 20px;\n  border-radius: 20px;\n  align-self: ${(props) => (props.mine ? \"flex-end\" : \"flex-start\")};\n  border-bottom-right-radius: ${(props) => (props.mine ? \"0px\" : \"20px\")};\n  border-bottom-left-radius: ${(props) => (props.mine ? \"20px\" : \"0px\")};\n  margin-bottom: 10px;\n`;\n\n\nconst ChatMessage: React.FC<IProps> = ({ text, mine }) => {\n  return (\n    <Message mine={mine}>{text}</Message>\n  )\n}\n\nexport default ChatMessage","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n    submitFn?: any\n}\n\nconst StyledForm = styled.form`\nborder-top: 2px solid #ccc;\n  padding: 10px 25px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n `;\n\nconst Form: React.FC<IProps> = ({ submitFn, children }) => {\n    return (\n        <StyledForm onSubmit={event => {\n            event.preventDefault()\n            submitFn();\n        }}>\n            {children}\n        </StyledForm>\n    )\n}\n\nexport default Form","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Form from \"../../Components/Form\";\n\nexport const LoadingWrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Wrapper = styled.div``;\n\nexport const Container = styled.div`\n  width: 70%;\n  min-width: 650px;\n  min-height: 500px;\n  margin: 0 auto;\n  margin-top: 50px;\n  border: 1px solid #ccc;\n`;\nexport const Head = styled.div`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 10px 25px;\n  border-bottom: 3px solid #ccc;\n  margin: 0 auto;\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const MessageBox = styled.div`\n  height: 400px;\n  height: 400px;\n  padding: 20px;\n  overflow: scroll;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const InputBox = styled.div`\n  border-top: 2px solid #ccc;\n  padding: 10px 25px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const MessageInput = styled.input`\n  width: 100%;\n  margin: 0 auto;\n  padding: 8px 10px;\n  border: none;\n  background-color: #eee;\n  border-radius: 4px;\n`;\n\nexport const SendButton = styled.button`\n  padding: 8px 12px;\n  border: none;\n  background-color: #3498db;\n  border-radius: 4px;\n  color: white;\n  &:hover {\n    transition: 0.2s linear;\n    background-color: #2980b9;\n  }\n`;\n\nexport const MessageBoxBottom = styled.div`\n  height: 70px;\n  margin: auto auto;\n`;\n\nexport const ExtendedForm = styled(Form)`\n  width: 100%;\n`;\n\nexport const ExtendedLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const ProfileImage = styled.img`\n  width: 50px;\n  height: 50px;\n  object-fit: cover;\n  border-radius: 10rem;\n  margin-right: 25px;\n`;\n","import React, { useEffect, useRef } from \"react\";\nimport ChatMessage from \"../../Components/ChatMessage\";\nimport Header from '../../Components/Header'\nimport * as S from './ChatStyles'\n\ninterface IProps {\n    chat: any\n    me: any\n    messages?: any[]\n    message: string\n    onChangeMessage: (event: React.ChangeEvent<Element>) => any;\n    SendMessageMutation: any\n    chatId: number\n}\n\nconst renderMessage = (messages: any[]) => {\n    return messages.map((msg: any, index: number) => {\n        return <ChatMessage key={index} {...msg} />\n    })\n}\n\nconst ChatPresenter: React.FC<IProps> = ({\n    chat,\n    me,\n    messages,\n    message,\n    onChangeMessage,\n    SendMessageMutation,\n    chatId\n}) => {\n    const ref = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n        if (ref && ref.current) {\n            ref.current.scrollTop = ref.current.scrollHeight;\n        }\n    }, [messages])\n    return (\n        <S.Wrapper>\n            <Header url={me.profilePhoto} />\n            <S.Container>\n                <S.Head>\n                    <S.ExtendedLink to={`/profile/${chat.to.username}`}>\n                        <S.ProfileImage src={me.id === chat.to.id ? chat.from.profilePhoto : chat.to.profilePhoto} alt={\"to\"} />\n                        To : {me.id === chat.to.id ? `${chat.from.username}` : `${chat.to.username}`}\n                    </S.ExtendedLink>\n                </S.Head>\n                <S.MessageBox ref={ref}>{messages && renderMessage(messages)}</S.MessageBox>\n                <S.MessageBoxBottom>\n                    <S.ExtendedForm submitFn={SendMessageMutation}>\n                        <S.MessageInput\n                            placeholder=\"Type message\"\n                            value={message}\n                            onChange={onChangeMessage}\n                        />\n                    </S.ExtendedForm>\n                </S.MessageBoxBottom>\n            </S.Container>\n        </S.Wrapper>\n    )\n};\n\nexport default ChatPresenter","import { gql } from \"@apollo/client\";\n\nexport const GET_CHAT_ROOM = gql`\n  query GetChatRoom($chatId: Int!) {\n    GetChatRoom(chatId: $chatId) {\n      ok\n      err\n      chat {\n        id\n        from {\n          id\n          username\n          profilePhoto\n        }\n        to {\n          id\n          username\n          profilePhoto\n        }\n        messages {\n          id\n          text\n          user {\n            id\n            username\n          }\n          createdAt\n        }\n      }\n    }\n  }\n`;\n\nexport const MESSAGE_SUBSCRIPTION = gql`\n  subscription MessageSubscription {\n    MessageSubscription {\n      id\n      text\n      user {\n        id\n      }\n    }\n  }\n`;\n\nexport const SEND_MESSAGE = gql`\n  mutation SendMessage($text: String!, $chatId: Int!) {\n    SendMessage(text: $text, chatId: $chatId) {\n      ok\n      err\n      message {\n        id\n        text\n        createdAt\n      }\n    }\n  }\n`;\n","import ChatContainer from \"./ChatContainer\";\nexport default ChatContainer;\n","import { useMutation, useQuery, useSubscription } from '@apollo/client';\nimport React, { useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Loader from '../../Components/Loader';\nimport useInput from '../../Hooks/useInput';\nimport { ME } from '../../sharedquaries';\nimport {\n    Me,\n    GetChatRoom,\n    GetChatRoomVariables,\n    MessageSubscription,\n    SendMessage,\n    SendMessageVariables\n} from '../../types/api';\nimport ChatPresenter from './ChatPresenter'\nimport {\n    GET_CHAT_ROOM,\n    MESSAGE_SUBSCRIPTION,\n    SEND_MESSAGE\n} from './ChatQueries';\nimport * as S from './ChatStyles'\n\ninterface IProps extends RouteComponentProps {\n    match: any\n}\n\nconst ChatContainer: React.FC<IProps> = ({ match: { params } }) => {\n    const { chatId } = params\n    const [me, setMe] = useState<any>()\n    const [message, onChangeMessage, setMessage] = useInput(\"\")\n    const [messages, setMessages] = useState<any[]>()\n    const [chat, setChat] = useState<any>()\n    useQuery<Me>(ME, {\n        fetchPolicy: \"network-only\",\n        onCompleted: ({ Me }) => {\n            const { ok, err, user } = Me\n            if (ok && user) {\n                setMe(user);\n            } else {\n                console.log(err)\n            }\n        }\n    })\n    const { loading, subscribeToMore } = useQuery<GetChatRoom, GetChatRoomVariables>(GET_CHAT_ROOM, {\n        fetchPolicy: \"network-only\",\n        variables: {\n            chatId: parseInt(chatId)\n        },\n        onCompleted: ({ GetChatRoom }) => {\n            const { ok, err, chat } = GetChatRoom;\n            if (ok && chat && chat.messages) {\n                setChat(chat);\n                if (chat.messages) {\n                    const messages = chat.messages.map(msg => {\n                        if (me && me.id && msg && msg.user && msg.user.id) {\n                            return {\n                                ...msg,\n                                mine: me.id === msg.user.id\n                            }\n                        } else {\n                            return null;\n                        }\n                    })\n                    setMessages(messages)\n                } else {\n                    console.log(\"no messages\")\n                }\n            } else {\n                console.log(err)\n            }\n        }\n    })\n\n    useEffect(() => {\n        subscribeToMore({\n            document: MESSAGE_SUBSCRIPTION,\n            updateQuery: (prev, { subscriptionData }) => {\n                if (!subscriptionData.data) return prev;\n                return { ...prev }\n            }\n        })\n    }, [subscribeToMore])\n\n    useSubscription<MessageSubscription>(MESSAGE_SUBSCRIPTION, {\n        fetchPolicy: \"network-only\",\n        onSubscriptionComplete: () => {\n            console.log(\"Listening new messages\");\n        },\n        onSubscriptionData: ({ subscriptionData }) => {\n            const { data } = subscriptionData;\n            if (data && messages && me) {\n                const { MessageSubscription } = data;\n                if (MessageSubscription) {\n                    setMessages([...messages, {\n                        ...MessageSubscription,\n                        mine: me.id === MessageSubscription.user.id\n                    }])\n                }\n            }\n        }\n    })\n\n    const [SendMessageMutation] = useMutation<SendMessage, SendMessageVariables>(SEND_MESSAGE, {\n        variables: {\n            text: message,\n            chatId: parseInt(chatId)\n        },\n        onCompleted: ({ SendMessage }) => {\n            // console.log(SendMessage)\n            const { ok, err, message } = SendMessage;\n            if (ok) {\n                setMessage(\"\")\n                setMessages([...(messages as any[]), {\n                    ...message,\n                    mine: true\n                }])\n            } else {\n                console.log(err)\n            }\n        }\n    })\n\n    if (loading || !me || !chat) {\n        return (\n            <S.LoadingWrapper>\n                <Loader />\n            </S.LoadingWrapper>\n        )\n    } else {\n        return (\n            <ChatPresenter\n                chat={chat}\n                me={me}\n                messages={messages}\n                message={message}\n                onChangeMessage={onChangeMessage}\n                SendMessageMutation={SendMessageMutation}\n                chatId={parseInt(chatId)}\n            />\n        )\n    }\n}\nexport default ChatContainer","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport Home from '../Routes/Home'\nimport AuthHome from '../Routes/AuthHome'\nimport Profile from '../Routes/Profile'\nimport Chat from '../Routes/Chat'\n\nconst LoggedInRoutes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/profile/:username\" component={Profile} />\n        <Route path=\"/chat/:chatId\" component={Chat} />\n        <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n)\n\nconst LoggedOutRoutes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={AuthHome} />\n        <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n)\n\nconst AppRouter = ({ isLoggedIn }: any) => {\n    return (\n        <BrowserRouter basename={\"/Jinstagram-client/\"}>\n            {isLoggedIn ? <LoggedInRoutes /> : <LoggedOutRoutes />}\n        </BrowserRouter>\n    )\n}\n\nexport default AppRouter;","import { DefaultTheme } from \"styled-components\";\n\n// const BOX_BORDER = \"1px solid #e6e6e6\";\n// const BORDER_RADIUS = \"4px\";\n\nconst theme:DefaultTheme = {\n  blueColor: \"#3498db\",\n  greyColor: \"#7f8c8d\",\n  yellowColor: \"#f1c40f\",\n  greenColor: \"#1abc9c\",\n  // bgColor: \"#FAFAFA\",\n  // blackColor: \"#262626\",\n  // darkGreyColor: \"#999\",\n  // lightGreyColor: \"#c7c7c7\",\n  // redColor: \"#ED4956\",\n  // darkBlueColor: \"#003569\",\n  // boxBorder: \"1px solid #e6e6e6\",\n  // borderRadius: \"4px\",\n  // whiteBox: `border:${BOX_BORDER};\n  //            border-radius:${BORDER_RADIUS};\n  //            background-color:white;\n  //           `\n};\n\nexport default theme;\n","import { gql, useQuery } from '@apollo/client';\nimport React, { createContext } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { HashRouter as Router } from 'react-router-dom'\nimport Routes from './Routes'\nimport theme from '../Styles/Theme'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Is_LOGGED_IN = gql`\nquery IsLoggedIn{\n  isLoggedIn @client\n}\n`\n\nconst AppContext = createContext(null)\n\nconst App = (): any => {\n  const { data: { isLoggedIn } } = useQuery(Is_LOGGED_IN)\n  return (\n    <AppContext.Provider value={isLoggedIn}>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Routes isLoggedIn={isLoggedIn} />\n        </Router>\n      </ThemeProvider>\n      <ToastContainer draggable={true} position={\"bottom-center\"} />\n    </AppContext.Provider>\n  )\n}\nexport default App","import { ApolloProvider } from '@apollo/client';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport client from './Apollo/apollo';\nimport App from './Components/App';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}